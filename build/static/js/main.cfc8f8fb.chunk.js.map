{"version":3,"sources":["logo.svg","build/index.main.mjs","App.js","reportWebVitals.js","index.js"],"names":["_version","_backendVersion","getExports","s","reachStdlib","_getViews","viewlib","infos","views","_getMaps","mapDataTy","T_Tuple","Alice","ctc","interact","undefined","sendrecv","Promise","reject","Error","stdlib","ctc0","T_UInt","ctc1","T_Null","ctc2","ctc3","T_Digest","ctc4","T_Address","creationTime","creationSecs","v420","protect","wager","args","evt_cnt","funcNum","onlyIf","out_tys","pay","sim_p","txn1","sim_r","txns","mapRefs","mapsPrev","mapsNext","data","v424","v425","time","secs","from","push","amt","kind","tok","add","checkedBigNumberify","UInt_max","isHalt","soloSend","timeoutAt","tys","waitIfNotPresent","v423","v430","recv","txn2","didTimeout","txn3","v684","v688","addressEq","assert","at","fs","msg","who","to","informTimeout","v435","v434","v438","v439","v440","v446","eq","v456","getFingers","v460","getGuess","v461","log","random","v462","v463","digest","v465","v466","v470","v468","v473","txn4","v651","v655","v469","v475","v479","v477","v482","txn5","v634","v638","v478","v484","txn6","v617","v621","v491","v492","v490","v495","v497","txn7","v600","v604","v500","v501","v499","v504","v506","v511","v512","v513","v510","v516","v517","v518","digestEq","txn8","v583","v587","v520","v523","v524","v525","v522","v528","v529","v530","txn9","v566","v570","v532","v536","seeWinning","v539","v537","v542","v543","v545","v548","cv439","cv440","v668","v671","mul","v673","txn10","v549","v553","seeOutcome","Bob","acceptWager","v488","v489","_Connectors","ALGO","appApproval","appClear","escrow","mapDataKeys","mapDataSize","unsupported","version","viewKeys","viewSize","ETH","ABI","Bytecode","BytecodeLen","Which","deployMode","myLog","myLoading","reach","loadStdlib","myEnv","providerEnvByName","a","startingBalance","parseCurrency","newTestAccount","accAlice","accBob","fmt","x","formatCurrency","getBalance","balanceOf","beforeAlice","beforeBob","ctcAlice","deploy","backend","ctcBob","attach","getInfo","FINGERS","OUTCOME","Player","Who","hasRandom","fingers","Math","floor","i","wait","guess","winningNumber","outcome","all","hasConsoleLogger","afterAlice","afterBob","console","Object","assign","ALGO_SERVER","ALGO_PORT","ALGO_INDEXER_SERVER","ALGO_INDEXER_PORT","REACH_ISOLATED_NETWORK","REACH_DEBUG","setProviderByEnv","App","props","state","cLog","loading","this","interval","setInterval","setState","align","PipelineShell","width","Heading","Button","onClick","test","Loader","bg","color","size","map","row","Text","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cfc8f8fb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","// Automatically generated with Reach 0.1.4\n/* eslint-disable */\nexport const _version = '0.1.4';\nexport const _backendVersion = 1;\n\n\nexport function getExports(s) {\n  const stdlib = s.reachStdlib;\n  return {\n    };\n  };\n\nexport function _getViews(s, viewlib) {\n  const stdlib = s.reachStdlib;\n  \n  return {\n    infos: {\n      },\n    views: {\n      }\n    };\n  \n  };\n\nexport function _getMaps(s) {\n  const stdlib = s.reachStdlib;\n  const ctc0 = stdlib.T_Tuple([]);\n  return {\n    mapDataTy: ctc0\n    };\n  };\n\nexport async function Alice(ctc, interact) {\n  if (typeof(ctc) !== 'object' || ctc.sendrecv === undefined) {\n    return Promise.reject(new Error(`The backend for Alice expects to receive a contract as its first argument.`));}\n  if (typeof(interact) !== 'object') {\n    return Promise.reject(new Error(`The backend for Alice expects to receive an interact object as its second argument.`));}\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_UInt;\n  const ctc1 = stdlib.T_Null;\n  const ctc2 = stdlib.T_Tuple([ctc0, ctc0]);\n  const ctc3 = stdlib.T_Digest;\n  const ctc4 = stdlib.T_Address;\n  \n  \n  const v58 = await ctc.creationTime();\n  const v59 = await ctc.creationSecs();\n  \n  const v420 = stdlib.protect(ctc0, interact.wager, 'for Alice\\'s interact field wager');\n  \n  const txn1 = await (ctc.sendrecv({\n    args: [v420],\n    evt_cnt: 1,\n    funcNum: 1,\n    onlyIf: true,\n    out_tys: [ctc0],\n    pay: [v420, []],\n    sim_p: (async (txn1) => {\n      const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n      \n      const [v424] = txn1.data;\n      const v425 = txn1.time;\n      const v426 = txn1.secs;\n      const v423 = txn1.from;\n      \n      sim_r.txns.push({\n        amt: v424,\n        kind: 'to',\n        tok: undefined\n        });\n      const v430 = stdlib.add(v425, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n      sim_r.isHalt = false;\n      \n      return sim_r;\n      }),\n    soloSend: true,\n    timeoutAt: undefined,\n    tys: [ctc0],\n    waitIfNotPresent: false\n    }));\n  const [v424] = txn1.data;\n  const v425 = txn1.time;\n  const v426 = txn1.secs;\n  const v423 = txn1.from;\n  ;\n  const v430 = stdlib.add(v425, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n  const txn2 = await (ctc.recv({\n    evt_cnt: 0,\n    funcNum: 2,\n    out_tys: [],\n    timeoutAt: ['time', v430],\n    waitIfNotPresent: false\n    }));\n  if (txn2.didTimeout) {\n    const txn3 = await (ctc.sendrecv({\n      args: [v423, v424, v430],\n      evt_cnt: 0,\n      funcNum: 3,\n      onlyIf: true,\n      out_tys: [],\n      pay: [stdlib.checkedBigNumberify('reach standard library:decimal', stdlib.UInt_max, 0), []],\n      sim_p: (async (txn3) => {\n        const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n        \n        const [] = txn3.data;\n        const v685 = txn3.time;\n        const v686 = txn3.secs;\n        const v684 = txn3.from;\n        \n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('reach standard library:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n          });\n        const v688 = stdlib.addressEq(v423, v684);\n        stdlib.assert(v688, {\n          at: 'reach standard library:209:7:dot',\n          fs: ['at ./index.rsh:95:41:application call to \"closeTo\" (defined at: reach standard library:207:8:function exp)'],\n          msg: 'sender correct',\n          who: 'Alice'\n          });\n        sim_r.txns.push({\n          amt: v424,\n          kind: 'from',\n          to: v423,\n          tok: undefined\n          });\n        sim_r.txns.push({\n          kind: 'halt',\n          tok: undefined\n          })\n        sim_r.isHalt = true;\n        \n        return sim_r;\n        }),\n      soloSend: true,\n      timeoutAt: undefined,\n      tys: [ctc4, ctc0, ctc0],\n      waitIfNotPresent: false\n      }));\n    const [] = txn3.data;\n    const v685 = txn3.time;\n    const v686 = txn3.secs;\n    const v684 = txn3.from;\n    ;\n    const v688 = stdlib.addressEq(v423, v684);\n    stdlib.assert(v688, {\n      at: 'reach standard library:209:7:dot',\n      fs: ['at ./index.rsh:95:41:application call to \"closeTo\" (defined at: reach standard library:207:8:function exp)'],\n      msg: 'sender correct',\n      who: 'Alice'\n      });\n    ;\n    stdlib.protect(ctc1, await interact.informTimeout(), {\n      at: './index.rsh:85:35:application',\n      fs: ['at ./index.rsh:84:15:application call to [unknown function] (defined at: ./index.rsh:84:27:function exp)', 'at reach standard library:212:8:application call to \"after\" (defined at: ./index.rsh:83:34:function exp)', 'at ./index.rsh:95:41:application call to \"closeTo\" (defined at: reach standard library:207:8:function exp)'],\n      msg: 'informTimeout',\n      who: 'Alice'\n      });\n    \n    return;\n    }\n  else {\n    const [] = txn2.data;\n    const v435 = txn2.time;\n    const v436 = txn2.secs;\n    const v434 = txn2.from;\n    const v438 = stdlib.add(v424, v424);\n    ;\n    let v439 = stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 1);\n    let v440 = v435;\n    let v446 = v438;\n    \n    while ((() => {\n      const v454 = stdlib.eq(v439, stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 1));\n      \n      return v454;})()) {\n      const v456 = stdlib.add(v440, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n      const v460 = stdlib.protect(ctc0, await interact.getFingers(), {\n        at: './index.rsh:103:48:application',\n        fs: ['at ./index.rsh:102:15:application call to [unknown function] (defined at: ./index.rsh:102:19:function exp)'],\n        msg: 'getFingers',\n        who: 'Alice'\n        });\n      const v461 = stdlib.protect(ctc0, await interact.getGuess(v460), {\n        at: './index.rsh:104:44:application',\n        fs: ['at ./index.rsh:102:15:application call to [unknown function] (defined at: ./index.rsh:102:19:function exp)'],\n        msg: 'getGuess',\n        who: 'Alice'\n        });\n      stdlib.protect(ctc1, await interact.log(v460), {\n        at: './index.rsh:106:23:application',\n        fs: ['at ./index.rsh:102:15:application call to [unknown function] (defined at: ./index.rsh:102:19:function exp)'],\n        msg: 'log',\n        who: 'Alice'\n        });\n      const v462 = stdlib.protect(ctc0, await interact.random(), {\n        at: 'reach standard library:60:31:application',\n        fs: ['at ./index.rsh:111:52:application call to \"makeCommitment\" (defined at: reach standard library:59:8:function exp)', 'at ./index.rsh:102:15:application call to [unknown function] (defined at: ./index.rsh:102:19:function exp)'],\n        msg: 'random',\n        who: 'Alice'\n        });\n      const v463 = stdlib.digest(ctc2, [v462, v460]);\n      const v465 = stdlib.protect(ctc0, await interact.random(), {\n        at: 'reach standard library:60:31:application',\n        fs: ['at ./index.rsh:113:62:application call to \"makeCommitment\" (defined at: reach standard library:59:8:function exp)', 'at ./index.rsh:102:15:application call to [unknown function] (defined at: ./index.rsh:102:19:function exp)'],\n        msg: 'random',\n        who: 'Alice'\n        });\n      const v466 = stdlib.digest(ctc2, [v465, v461]);\n      \n      const txn3 = await (ctc.sendrecv({\n        args: [v423, v424, v434, v446, v456, v463],\n        evt_cnt: 1,\n        funcNum: 6,\n        onlyIf: true,\n        out_tys: [ctc3],\n        pay: [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []],\n        sim_p: (async (txn3) => {\n          const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n          \n          const [v469] = txn3.data;\n          const v470 = txn3.time;\n          const v471 = txn3.secs;\n          const v468 = txn3.from;\n          \n          sim_r.txns.push({\n            amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n            kind: 'to',\n            tok: undefined\n            });\n          const v473 = stdlib.addressEq(v423, v468);\n          stdlib.assert(v473, {\n            at: './index.rsh:117:11:dot',\n            fs: [],\n            msg: 'sender correct',\n            who: 'Alice'\n            });\n          const v475 = stdlib.add(v470, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n          sim_r.isHalt = false;\n          \n          return sim_r;\n          }),\n        soloSend: true,\n        timeoutAt: ['time', v456],\n        tys: [ctc4, ctc0, ctc4, ctc0, ctc0, ctc3],\n        waitIfNotPresent: false\n        }));\n      if (txn3.didTimeout) {\n        const txn4 = await (ctc.recv({\n          evt_cnt: 0,\n          funcNum: 7,\n          out_tys: [],\n          timeoutAt: undefined,\n          waitIfNotPresent: false\n          }));\n        const [] = txn4.data;\n        const v652 = txn4.time;\n        const v653 = txn4.secs;\n        const v651 = txn4.from;\n        ;\n        const v655 = stdlib.addressEq(v434, v651);\n        stdlib.assert(v655, {\n          at: 'reach standard library:209:7:dot',\n          fs: ['at ./index.rsh:118:43:application call to \"closeTo\" (defined at: reach standard library:207:8:function exp)'],\n          msg: 'sender correct',\n          who: 'Alice'\n          });\n        ;\n        stdlib.protect(ctc1, await interact.informTimeout(), {\n          at: './index.rsh:85:35:application',\n          fs: ['at ./index.rsh:84:15:application call to [unknown function] (defined at: ./index.rsh:84:27:function exp)', 'at reach standard library:212:8:application call to \"after\" (defined at: ./index.rsh:83:34:function exp)', 'at ./index.rsh:118:43:application call to \"closeTo\" (defined at: reach standard library:207:8:function exp)'],\n          msg: 'informTimeout',\n          who: 'Alice'\n          });\n        \n        return;\n        }\n      else {\n        const [v469] = txn3.data;\n        const v470 = txn3.time;\n        const v471 = txn3.secs;\n        const v468 = txn3.from;\n        ;\n        const v473 = stdlib.addressEq(v423, v468);\n        stdlib.assert(v473, {\n          at: './index.rsh:117:11:dot',\n          fs: [],\n          msg: 'sender correct',\n          who: 'Alice'\n          });\n        const v475 = stdlib.add(v470, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n        const txn4 = await (ctc.sendrecv({\n          args: [v423, v424, v434, v446, v469, v475, v466],\n          evt_cnt: 1,\n          funcNum: 8,\n          onlyIf: true,\n          out_tys: [ctc3],\n          pay: [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []],\n          sim_p: (async (txn4) => {\n            const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n            \n            const [v478] = txn4.data;\n            const v479 = txn4.time;\n            const v480 = txn4.secs;\n            const v477 = txn4.from;\n            \n            sim_r.txns.push({\n              amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n              kind: 'to',\n              tok: undefined\n              });\n            const v482 = stdlib.addressEq(v423, v477);\n            stdlib.assert(v482, {\n              at: './index.rsh:121:11:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'Alice'\n              });\n            const v484 = stdlib.add(v479, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n            sim_r.isHalt = false;\n            \n            return sim_r;\n            }),\n          soloSend: true,\n          timeoutAt: ['time', v475],\n          tys: [ctc4, ctc0, ctc4, ctc0, ctc3, ctc0, ctc3],\n          waitIfNotPresent: false\n          }));\n        if (txn4.didTimeout) {\n          const txn5 = await (ctc.recv({\n            evt_cnt: 0,\n            funcNum: 9,\n            out_tys: [],\n            timeoutAt: undefined,\n            waitIfNotPresent: false\n            }));\n          const [] = txn5.data;\n          const v635 = txn5.time;\n          const v636 = txn5.secs;\n          const v634 = txn5.from;\n          ;\n          const v638 = stdlib.addressEq(v434, v634);\n          stdlib.assert(v638, {\n            at: 'reach standard library:209:7:dot',\n            fs: ['at ./index.rsh:122:43:application call to \"closeTo\" (defined at: reach standard library:207:8:function exp)'],\n            msg: 'sender correct',\n            who: 'Alice'\n            });\n          ;\n          stdlib.protect(ctc1, await interact.informTimeout(), {\n            at: './index.rsh:85:35:application',\n            fs: ['at ./index.rsh:84:15:application call to [unknown function] (defined at: ./index.rsh:84:27:function exp)', 'at reach standard library:212:8:application call to \"after\" (defined at: ./index.rsh:83:34:function exp)', 'at ./index.rsh:122:43:application call to \"closeTo\" (defined at: reach standard library:207:8:function exp)'],\n            msg: 'informTimeout',\n            who: 'Alice'\n            });\n          \n          return;\n          }\n        else {\n          const [v478] = txn4.data;\n          const v479 = txn4.time;\n          const v480 = txn4.secs;\n          const v477 = txn4.from;\n          ;\n          const v482 = stdlib.addressEq(v423, v477);\n          stdlib.assert(v482, {\n            at: './index.rsh:121:11:dot',\n            fs: [],\n            msg: 'sender correct',\n            who: 'Alice'\n            });\n          const v484 = stdlib.add(v479, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n          const txn5 = await (ctc.recv({\n            evt_cnt: 1,\n            funcNum: 10,\n            out_tys: [ctc0],\n            timeoutAt: ['time', v484],\n            waitIfNotPresent: false\n            }));\n          if (txn5.didTimeout) {\n            const txn6 = await (ctc.sendrecv({\n              args: [v423, v424, v434, v446, v469, v478, v484],\n              evt_cnt: 0,\n              funcNum: 11,\n              onlyIf: true,\n              out_tys: [],\n              pay: [stdlib.checkedBigNumberify('reach standard library:decimal', stdlib.UInt_max, 0), []],\n              sim_p: (async (txn6) => {\n                const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n                \n                const [] = txn6.data;\n                const v618 = txn6.time;\n                const v619 = txn6.secs;\n                const v617 = txn6.from;\n                \n                sim_r.txns.push({\n                  amt: stdlib.checkedBigNumberify('reach standard library:decimal', stdlib.UInt_max, 0),\n                  kind: 'to',\n                  tok: undefined\n                  });\n                const v621 = stdlib.addressEq(v423, v617);\n                stdlib.assert(v621, {\n                  at: 'reach standard library:209:7:dot',\n                  fs: ['at ./index.rsh:141:43:application call to \"closeTo\" (defined at: reach standard library:207:8:function exp)'],\n                  msg: 'sender correct',\n                  who: 'Alice'\n                  });\n                sim_r.txns.push({\n                  amt: v446,\n                  kind: 'from',\n                  to: v423,\n                  tok: undefined\n                  });\n                sim_r.txns.push({\n                  kind: 'halt',\n                  tok: undefined\n                  })\n                sim_r.isHalt = true;\n                \n                return sim_r;\n                }),\n              soloSend: true,\n              timeoutAt: undefined,\n              tys: [ctc4, ctc0, ctc4, ctc0, ctc3, ctc3, ctc0],\n              waitIfNotPresent: false\n              }));\n            const [] = txn6.data;\n            const v618 = txn6.time;\n            const v619 = txn6.secs;\n            const v617 = txn6.from;\n            ;\n            const v621 = stdlib.addressEq(v423, v617);\n            stdlib.assert(v621, {\n              at: 'reach standard library:209:7:dot',\n              fs: ['at ./index.rsh:141:43:application call to \"closeTo\" (defined at: reach standard library:207:8:function exp)'],\n              msg: 'sender correct',\n              who: 'Alice'\n              });\n            ;\n            stdlib.protect(ctc1, await interact.informTimeout(), {\n              at: './index.rsh:85:35:application',\n              fs: ['at ./index.rsh:84:15:application call to [unknown function] (defined at: ./index.rsh:84:27:function exp)', 'at reach standard library:212:8:application call to \"after\" (defined at: ./index.rsh:83:34:function exp)', 'at ./index.rsh:141:43:application call to \"closeTo\" (defined at: reach standard library:207:8:function exp)'],\n              msg: 'informTimeout',\n              who: 'Alice'\n              });\n            \n            return;\n            }\n          else {\n            const [v491] = txn5.data;\n            const v492 = txn5.time;\n            const v493 = txn5.secs;\n            const v490 = txn5.from;\n            ;\n            const v495 = stdlib.addressEq(v434, v490);\n            stdlib.assert(v495, {\n              at: './index.rsh:140:11:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'Alice'\n              });\n            const v497 = stdlib.add(v492, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n            const txn6 = await (ctc.recv({\n              evt_cnt: 1,\n              funcNum: 12,\n              out_tys: [ctc0],\n              timeoutAt: ['time', v497],\n              waitIfNotPresent: false\n              }));\n            if (txn6.didTimeout) {\n              const txn7 = await (ctc.sendrecv({\n                args: [v423, v424, v434, v446, v469, v478, v491, v497],\n                evt_cnt: 0,\n                funcNum: 13,\n                onlyIf: true,\n                out_tys: [],\n                pay: [stdlib.checkedBigNumberify('reach standard library:decimal', stdlib.UInt_max, 0), []],\n                sim_p: (async (txn7) => {\n                  const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n                  \n                  const [] = txn7.data;\n                  const v601 = txn7.time;\n                  const v602 = txn7.secs;\n                  const v600 = txn7.from;\n                  \n                  sim_r.txns.push({\n                    amt: stdlib.checkedBigNumberify('reach standard library:decimal', stdlib.UInt_max, 0),\n                    kind: 'to',\n                    tok: undefined\n                    });\n                  const v604 = stdlib.addressEq(v423, v600);\n                  stdlib.assert(v604, {\n                    at: 'reach standard library:209:7:dot',\n                    fs: ['at ./index.rsh:144:43:application call to \"closeTo\" (defined at: reach standard library:207:8:function exp)'],\n                    msg: 'sender correct',\n                    who: 'Alice'\n                    });\n                  sim_r.txns.push({\n                    amt: v446,\n                    kind: 'from',\n                    to: v423,\n                    tok: undefined\n                    });\n                  sim_r.txns.push({\n                    kind: 'halt',\n                    tok: undefined\n                    })\n                  sim_r.isHalt = true;\n                  \n                  return sim_r;\n                  }),\n                soloSend: true,\n                timeoutAt: undefined,\n                tys: [ctc4, ctc0, ctc4, ctc0, ctc3, ctc3, ctc0, ctc0],\n                waitIfNotPresent: false\n                }));\n              const [] = txn7.data;\n              const v601 = txn7.time;\n              const v602 = txn7.secs;\n              const v600 = txn7.from;\n              ;\n              const v604 = stdlib.addressEq(v423, v600);\n              stdlib.assert(v604, {\n                at: 'reach standard library:209:7:dot',\n                fs: ['at ./index.rsh:144:43:application call to \"closeTo\" (defined at: reach standard library:207:8:function exp)'],\n                msg: 'sender correct',\n                who: 'Alice'\n                });\n              ;\n              stdlib.protect(ctc1, await interact.informTimeout(), {\n                at: './index.rsh:85:35:application',\n                fs: ['at ./index.rsh:84:15:application call to [unknown function] (defined at: ./index.rsh:84:27:function exp)', 'at reach standard library:212:8:application call to \"after\" (defined at: ./index.rsh:83:34:function exp)', 'at ./index.rsh:144:43:application call to \"closeTo\" (defined at: reach standard library:207:8:function exp)'],\n                msg: 'informTimeout',\n                who: 'Alice'\n                });\n              \n              return;\n              }\n            else {\n              const [v500] = txn6.data;\n              const v501 = txn6.time;\n              const v502 = txn6.secs;\n              const v499 = txn6.from;\n              ;\n              const v504 = stdlib.addressEq(v434, v499);\n              stdlib.assert(v504, {\n                at: './index.rsh:143:11:dot',\n                fs: [],\n                msg: 'sender correct',\n                who: 'Alice'\n                });\n              const v506 = stdlib.add(v501, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n              const txn7 = await (ctc.sendrecv({\n                args: [v423, v424, v434, v446, v469, v478, v491, v500, v506, v462, v460],\n                evt_cnt: 2,\n                funcNum: 14,\n                onlyIf: true,\n                out_tys: [ctc0, ctc0],\n                pay: [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []],\n                sim_p: (async (txn7) => {\n                  const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n                  \n                  const [v511, v512] = txn7.data;\n                  const v513 = txn7.time;\n                  const v514 = txn7.secs;\n                  const v510 = txn7.from;\n                  \n                  sim_r.txns.push({\n                    amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n                    kind: 'to',\n                    tok: undefined\n                    });\n                  const v516 = stdlib.addressEq(v423, v510);\n                  stdlib.assert(v516, {\n                    at: './index.rsh:154:11:dot',\n                    fs: [],\n                    msg: 'sender correct',\n                    who: 'Alice'\n                    });\n                  const v517 = stdlib.digest(ctc2, [v511, v512]);\n                  const v518 = stdlib.digestEq(v469, v517);\n                  stdlib.assert(v518, {\n                    at: 'reach standard library:65:17:application',\n                    fs: ['at ./index.rsh:157:24:application call to \"checkCommitment\" (defined at: reach standard library:64:8:function exp)'],\n                    msg: null,\n                    who: 'Alice'\n                    });\n                  const v520 = stdlib.add(v513, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n                  sim_r.isHalt = false;\n                  \n                  return sim_r;\n                  }),\n                soloSend: true,\n                timeoutAt: ['time', v506],\n                tys: [ctc4, ctc0, ctc4, ctc0, ctc3, ctc3, ctc0, ctc0, ctc0, ctc0, ctc0],\n                waitIfNotPresent: false\n                }));\n              if (txn7.didTimeout) {\n                const txn8 = await (ctc.recv({\n                  evt_cnt: 0,\n                  funcNum: 15,\n                  out_tys: [],\n                  timeoutAt: undefined,\n                  waitIfNotPresent: false\n                  }));\n                const [] = txn8.data;\n                const v584 = txn8.time;\n                const v585 = txn8.secs;\n                const v583 = txn8.from;\n                ;\n                const v587 = stdlib.addressEq(v434, v583);\n                stdlib.assert(v587, {\n                  at: 'reach standard library:209:7:dot',\n                  fs: ['at ./index.rsh:155:43:application call to \"closeTo\" (defined at: reach standard library:207:8:function exp)'],\n                  msg: 'sender correct',\n                  who: 'Alice'\n                  });\n                ;\n                stdlib.protect(ctc1, await interact.informTimeout(), {\n                  at: './index.rsh:85:35:application',\n                  fs: ['at ./index.rsh:84:15:application call to [unknown function] (defined at: ./index.rsh:84:27:function exp)', 'at reach standard library:212:8:application call to \"after\" (defined at: ./index.rsh:83:34:function exp)', 'at ./index.rsh:155:43:application call to \"closeTo\" (defined at: reach standard library:207:8:function exp)'],\n                  msg: 'informTimeout',\n                  who: 'Alice'\n                  });\n                \n                return;\n                }\n              else {\n                const [v511, v512] = txn7.data;\n                const v513 = txn7.time;\n                const v514 = txn7.secs;\n                const v510 = txn7.from;\n                ;\n                const v516 = stdlib.addressEq(v423, v510);\n                stdlib.assert(v516, {\n                  at: './index.rsh:154:11:dot',\n                  fs: [],\n                  msg: 'sender correct',\n                  who: 'Alice'\n                  });\n                const v517 = stdlib.digest(ctc2, [v511, v512]);\n                const v518 = stdlib.digestEq(v469, v517);\n                stdlib.assert(v518, {\n                  at: 'reach standard library:65:17:application',\n                  fs: ['at ./index.rsh:157:24:application call to \"checkCommitment\" (defined at: reach standard library:64:8:function exp)'],\n                  msg: null,\n                  who: 'Alice'\n                  });\n                const v520 = stdlib.add(v513, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n                const txn8 = await (ctc.sendrecv({\n                  args: [v423, v424, v434, v446, v478, v491, v500, v512, v520, v465, v461],\n                  evt_cnt: 2,\n                  funcNum: 16,\n                  onlyIf: true,\n                  out_tys: [ctc0, ctc0],\n                  pay: [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []],\n                  sim_p: (async (txn8) => {\n                    const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n                    \n                    const [v523, v524] = txn8.data;\n                    const v525 = txn8.time;\n                    const v526 = txn8.secs;\n                    const v522 = txn8.from;\n                    \n                    sim_r.txns.push({\n                      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n                      kind: 'to',\n                      tok: undefined\n                      });\n                    const v528 = stdlib.addressEq(v423, v522);\n                    stdlib.assert(v528, {\n                      at: './index.rsh:160:11:dot',\n                      fs: [],\n                      msg: 'sender correct',\n                      who: 'Alice'\n                      });\n                    const v529 = stdlib.digest(ctc2, [v523, v524]);\n                    const v530 = stdlib.digestEq(v478, v529);\n                    stdlib.assert(v530, {\n                      at: 'reach standard library:65:17:application',\n                      fs: ['at ./index.rsh:162:24:application call to \"checkCommitment\" (defined at: reach standard library:64:8:function exp)'],\n                      msg: null,\n                      who: 'Alice'\n                      });\n                    const v532 = stdlib.add(v525, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n                    sim_r.isHalt = false;\n                    \n                    return sim_r;\n                    }),\n                  soloSend: true,\n                  timeoutAt: ['time', v520],\n                  tys: [ctc4, ctc0, ctc4, ctc0, ctc3, ctc0, ctc0, ctc0, ctc0, ctc0, ctc0],\n                  waitIfNotPresent: false\n                  }));\n                if (txn8.didTimeout) {\n                  const txn9 = await (ctc.recv({\n                    evt_cnt: 0,\n                    funcNum: 17,\n                    out_tys: [],\n                    timeoutAt: undefined,\n                    waitIfNotPresent: false\n                    }));\n                  const [] = txn9.data;\n                  const v567 = txn9.time;\n                  const v568 = txn9.secs;\n                  const v566 = txn9.from;\n                  ;\n                  const v570 = stdlib.addressEq(v434, v566);\n                  stdlib.assert(v570, {\n                    at: 'reach standard library:209:7:dot',\n                    fs: ['at ./index.rsh:161:41:application call to \"closeTo\" (defined at: reach standard library:207:8:function exp)'],\n                    msg: 'sender correct',\n                    who: 'Alice'\n                    });\n                  ;\n                  stdlib.protect(ctc1, await interact.informTimeout(), {\n                    at: './index.rsh:85:35:application',\n                    fs: ['at ./index.rsh:84:15:application call to [unknown function] (defined at: ./index.rsh:84:27:function exp)', 'at reach standard library:212:8:application call to \"after\" (defined at: ./index.rsh:83:34:function exp)', 'at ./index.rsh:161:41:application call to \"closeTo\" (defined at: reach standard library:207:8:function exp)'],\n                    msg: 'informTimeout',\n                    who: 'Alice'\n                    });\n                  \n                  return;\n                  }\n                else {\n                  const [v523, v524] = txn8.data;\n                  const v525 = txn8.time;\n                  const v526 = txn8.secs;\n                  const v522 = txn8.from;\n                  ;\n                  const v528 = stdlib.addressEq(v423, v522);\n                  stdlib.assert(v528, {\n                    at: './index.rsh:160:11:dot',\n                    fs: [],\n                    msg: 'sender correct',\n                    who: 'Alice'\n                    });\n                  const v529 = stdlib.digest(ctc2, [v523, v524]);\n                  const v530 = stdlib.digestEq(v478, v529);\n                  stdlib.assert(v530, {\n                    at: 'reach standard library:65:17:application',\n                    fs: ['at ./index.rsh:162:24:application call to \"checkCommitment\" (defined at: reach standard library:64:8:function exp)'],\n                    msg: null,\n                    who: 'Alice'\n                    });\n                  const v532 = stdlib.add(v525, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n                  const v536 = stdlib.add(v512, v491);\n                  stdlib.protect(ctc1, await interact.seeWinning(v536), {\n                    at: './index.rsh:168:30:application',\n                    fs: ['at ./index.rsh:166:15:application call to [unknown function] (defined at: ./index.rsh:166:19:function exp)'],\n                    msg: 'seeWinning',\n                    who: 'Alice'\n                    });\n                  \n                  const txn9 = await (ctc.sendrecv({\n                    args: [v423, v424, v434, v446, v491, v500, v512, v524, v532, v536],\n                    evt_cnt: 1,\n                    funcNum: 18,\n                    onlyIf: true,\n                    out_tys: [ctc0],\n                    pay: [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []],\n                    sim_p: (async (txn9) => {\n                      const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n                      \n                      const [v538] = txn9.data;\n                      const v539 = txn9.time;\n                      const v540 = txn9.secs;\n                      const v537 = txn9.from;\n                      \n                      sim_r.txns.push({\n                        amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n                        kind: 'to',\n                        tok: undefined\n                        });\n                      const v542 = stdlib.addressEq(v423, v537);\n                      stdlib.assert(v542, {\n                        at: './index.rsh:171:11:dot',\n                        fs: [],\n                        msg: 'sender correct',\n                        who: 'Alice'\n                        });\n                      let v543;\n                      const v544 = stdlib.eq(v524, v500);\n                      if (v544) {\n                        v543 = stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 1);\n                        }\n                      else {\n                        const v545 = stdlib.add(v512, v491);\n                        const v546 = stdlib.eq(v545, v524);\n                        if (v546) {\n                          v543 = stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 2);\n                          }\n                        else {\n                          const v548 = stdlib.eq(v545, v500);\n                          if (v548) {\n                            v543 = stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 0);\n                            }\n                          else {\n                            v543 = stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 1);\n                            }\n                          }\n                        }\n                      const cv439 = v543;\n                      const cv440 = v539;\n                      const cv446 = v446;\n                      \n                      (() => {\n                        const v439 = cv439;\n                        const v440 = cv440;\n                        const v446 = cv446;\n                        \n                        if ((() => {\n                          const v454 = stdlib.eq(v439, stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 1));\n                          \n                          return v454;})()) {\n                          const v456 = stdlib.add(v440, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n                          sim_r.isHalt = false;\n                          }\n                        else {\n                          const v668 = stdlib.eq(v439, stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 2));\n                          const v671 = stdlib.mul(stdlib.checkedBigNumberify('./index.rsh:181:16:decimal', stdlib.UInt_max, 2), v424);\n                          const v673 = v668 ? v423 : v434;\n                          sim_r.txns.push({\n                            amt: v671,\n                            kind: 'from',\n                            to: v673,\n                            tok: undefined\n                            });\n                          sim_r.txns.push({\n                            kind: 'halt',\n                            tok: undefined\n                            })\n                          sim_r.isHalt = true;\n                          }})();\n                      return sim_r;\n                      }),\n                    soloSend: true,\n                    timeoutAt: ['time', v532],\n                    tys: [ctc4, ctc0, ctc4, ctc0, ctc0, ctc0, ctc0, ctc0, ctc0, ctc0],\n                    waitIfNotPresent: false\n                    }));\n                  if (txn9.didTimeout) {\n                    const txn10 = await (ctc.sendrecv({\n                      args: [v423, v424, v434, v446, v491, v500, v512, v524, v532],\n                      evt_cnt: 0,\n                      funcNum: 19,\n                      onlyIf: true,\n                      out_tys: [],\n                      pay: [stdlib.checkedBigNumberify('reach standard library:decimal', stdlib.UInt_max, 0), []],\n                      sim_p: (async (txn10) => {\n                        const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n                        \n                        const [] = txn10.data;\n                        const v550 = txn10.time;\n                        const v551 = txn10.secs;\n                        const v549 = txn10.from;\n                        \n                        sim_r.txns.push({\n                          amt: stdlib.checkedBigNumberify('reach standard library:decimal', stdlib.UInt_max, 0),\n                          kind: 'to',\n                          tok: undefined\n                          });\n                        const v553 = stdlib.addressEq(v423, v549);\n                        stdlib.assert(v553, {\n                          at: 'reach standard library:209:7:dot',\n                          fs: ['at ./index.rsh:172:41:application call to \"closeTo\" (defined at: reach standard library:207:8:function exp)'],\n                          msg: 'sender correct',\n                          who: 'Alice'\n                          });\n                        sim_r.txns.push({\n                          amt: v446,\n                          kind: 'from',\n                          to: v423,\n                          tok: undefined\n                          });\n                        sim_r.txns.push({\n                          kind: 'halt',\n                          tok: undefined\n                          })\n                        sim_r.isHalt = true;\n                        \n                        return sim_r;\n                        }),\n                      soloSend: true,\n                      timeoutAt: undefined,\n                      tys: [ctc4, ctc0, ctc4, ctc0, ctc0, ctc0, ctc0, ctc0, ctc0],\n                      waitIfNotPresent: false\n                      }));\n                    const [] = txn10.data;\n                    const v550 = txn10.time;\n                    const v551 = txn10.secs;\n                    const v549 = txn10.from;\n                    ;\n                    const v553 = stdlib.addressEq(v423, v549);\n                    stdlib.assert(v553, {\n                      at: 'reach standard library:209:7:dot',\n                      fs: ['at ./index.rsh:172:41:application call to \"closeTo\" (defined at: reach standard library:207:8:function exp)'],\n                      msg: 'sender correct',\n                      who: 'Alice'\n                      });\n                    ;\n                    stdlib.protect(ctc1, await interact.informTimeout(), {\n                      at: './index.rsh:85:35:application',\n                      fs: ['at ./index.rsh:84:15:application call to [unknown function] (defined at: ./index.rsh:84:27:function exp)', 'at reach standard library:212:8:application call to \"after\" (defined at: ./index.rsh:83:34:function exp)', 'at ./index.rsh:172:41:application call to \"closeTo\" (defined at: reach standard library:207:8:function exp)'],\n                      msg: 'informTimeout',\n                      who: 'Alice'\n                      });\n                    \n                    return;\n                    }\n                  else {\n                    const [v538] = txn9.data;\n                    const v539 = txn9.time;\n                    const v540 = txn9.secs;\n                    const v537 = txn9.from;\n                    ;\n                    const v542 = stdlib.addressEq(v423, v537);\n                    stdlib.assert(v542, {\n                      at: './index.rsh:171:11:dot',\n                      fs: [],\n                      msg: 'sender correct',\n                      who: 'Alice'\n                      });\n                    let v543;\n                    const v544 = stdlib.eq(v524, v500);\n                    if (v544) {\n                      v543 = stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 1);\n                      }\n                    else {\n                      const v545 = stdlib.add(v512, v491);\n                      const v546 = stdlib.eq(v545, v524);\n                      if (v546) {\n                        v543 = stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 2);\n                        }\n                      else {\n                        const v548 = stdlib.eq(v545, v500);\n                        if (v548) {\n                          v543 = stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 0);\n                          }\n                        else {\n                          v543 = stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 1);\n                          }\n                        }\n                      }\n                    const cv439 = v543;\n                    const cv440 = v539;\n                    const cv446 = v446;\n                    \n                    v439 = cv439;\n                    v440 = cv440;\n                    v446 = cv446;\n                    \n                    continue;}\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    const v668 = stdlib.eq(v439, stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 2));\n    const v671 = stdlib.mul(stdlib.checkedBigNumberify('./index.rsh:181:16:decimal', stdlib.UInt_max, 2), v424);\n    const v673 = v668 ? v423 : v434;\n    ;\n    stdlib.protect(ctc1, await interact.seeOutcome(v439), {\n      at: './index.rsh:185:28:application',\n      fs: ['at ./index.rsh:184:11:application call to [unknown function] (defined at: ./index.rsh:184:23:function exp)'],\n      msg: 'seeOutcome',\n      who: 'Alice'\n      });\n    \n    return;}\n  \n  \n  };\nexport async function Bob(ctc, interact) {\n  if (typeof(ctc) !== 'object' || ctc.sendrecv === undefined) {\n    return Promise.reject(new Error(`The backend for Bob expects to receive a contract as its first argument.`));}\n  if (typeof(interact) !== 'object') {\n    return Promise.reject(new Error(`The backend for Bob expects to receive an interact object as its second argument.`));}\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_UInt;\n  const ctc1 = stdlib.T_Null;\n  const ctc2 = stdlib.T_Digest;\n  const ctc3 = stdlib.T_Tuple([ctc0, ctc0]);\n  const ctc4 = stdlib.T_Address;\n  \n  \n  const v58 = await ctc.creationTime();\n  const v59 = await ctc.creationSecs();\n  \n  const txn1 = await (ctc.recv({\n    evt_cnt: 1,\n    funcNum: 1,\n    out_tys: [ctc0],\n    timeoutAt: undefined,\n    waitIfNotPresent: false\n    }));\n  const [v424] = txn1.data;\n  const v425 = txn1.time;\n  const v426 = txn1.secs;\n  const v423 = txn1.from;\n  ;\n  const v430 = stdlib.add(v425, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n  stdlib.protect(ctc1, await interact.acceptWager(v424), {\n    at: './index.rsh:93:29:application',\n    fs: ['at ./index.rsh:92:13:application call to [unknown function] (defined at: ./index.rsh:92:17:function exp)'],\n    msg: 'acceptWager',\n    who: 'Bob'\n    });\n  \n  const txn2 = await (ctc.sendrecv({\n    args: [v423, v424, v430],\n    evt_cnt: 0,\n    funcNum: 2,\n    onlyIf: true,\n    out_tys: [],\n    pay: [v424, []],\n    sim_p: (async (txn2) => {\n      const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n      \n      const [] = txn2.data;\n      const v435 = txn2.time;\n      const v436 = txn2.secs;\n      const v434 = txn2.from;\n      \n      const v438 = stdlib.add(v424, v424);\n      sim_r.txns.push({\n        amt: v424,\n        kind: 'to',\n        tok: undefined\n        });\n      const v439 = stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 1);\n      const v440 = v435;\n      const v446 = v438;\n      \n      if ((() => {\n        const v454 = stdlib.eq(v439, stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 1));\n        \n        return v454;})()) {\n        const v456 = stdlib.add(v440, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n        sim_r.isHalt = false;\n        }\n      else {\n        const v668 = stdlib.eq(v439, stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 2));\n        const v671 = stdlib.mul(stdlib.checkedBigNumberify('./index.rsh:181:16:decimal', stdlib.UInt_max, 2), v424);\n        const v673 = v668 ? v423 : v434;\n        sim_r.txns.push({\n          amt: v671,\n          kind: 'from',\n          to: v673,\n          tok: undefined\n          });\n        sim_r.txns.push({\n          kind: 'halt',\n          tok: undefined\n          })\n        sim_r.isHalt = true;\n        }\n      return sim_r;\n      }),\n    soloSend: true,\n    timeoutAt: ['time', v430],\n    tys: [ctc4, ctc0, ctc0],\n    waitIfNotPresent: false\n    }));\n  if (txn2.didTimeout) {\n    const txn3 = await (ctc.recv({\n      evt_cnt: 0,\n      funcNum: 3,\n      out_tys: [],\n      timeoutAt: undefined,\n      waitIfNotPresent: false\n      }));\n    const [] = txn3.data;\n    const v685 = txn3.time;\n    const v686 = txn3.secs;\n    const v684 = txn3.from;\n    ;\n    const v688 = stdlib.addressEq(v423, v684);\n    stdlib.assert(v688, {\n      at: 'reach standard library:209:7:dot',\n      fs: ['at ./index.rsh:95:41:application call to \"closeTo\" (defined at: reach standard library:207:8:function exp)'],\n      msg: 'sender correct',\n      who: 'Bob'\n      });\n    ;\n    stdlib.protect(ctc1, await interact.informTimeout(), {\n      at: './index.rsh:85:35:application',\n      fs: ['at ./index.rsh:84:15:application call to [unknown function] (defined at: ./index.rsh:84:27:function exp)', 'at reach standard library:212:8:application call to \"after\" (defined at: ./index.rsh:83:34:function exp)', 'at ./index.rsh:95:41:application call to \"closeTo\" (defined at: reach standard library:207:8:function exp)'],\n      msg: 'informTimeout',\n      who: 'Bob'\n      });\n    \n    return;\n    }\n  else {\n    const [] = txn2.data;\n    const v435 = txn2.time;\n    const v436 = txn2.secs;\n    const v434 = txn2.from;\n    const v438 = stdlib.add(v424, v424);\n    ;\n    let v439 = stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 1);\n    let v440 = v435;\n    let v446 = v438;\n    \n    while ((() => {\n      const v454 = stdlib.eq(v439, stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 1));\n      \n      return v454;})()) {\n      const v456 = stdlib.add(v440, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n      const txn3 = await (ctc.recv({\n        evt_cnt: 1,\n        funcNum: 6,\n        out_tys: [ctc2],\n        timeoutAt: ['time', v456],\n        waitIfNotPresent: false\n        }));\n      if (txn3.didTimeout) {\n        const txn4 = await (ctc.sendrecv({\n          args: [v423, v424, v434, v446, v456],\n          evt_cnt: 0,\n          funcNum: 7,\n          onlyIf: true,\n          out_tys: [],\n          pay: [stdlib.checkedBigNumberify('reach standard library:decimal', stdlib.UInt_max, 0), []],\n          sim_p: (async (txn4) => {\n            const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n            \n            const [] = txn4.data;\n            const v652 = txn4.time;\n            const v653 = txn4.secs;\n            const v651 = txn4.from;\n            \n            sim_r.txns.push({\n              amt: stdlib.checkedBigNumberify('reach standard library:decimal', stdlib.UInt_max, 0),\n              kind: 'to',\n              tok: undefined\n              });\n            const v655 = stdlib.addressEq(v434, v651);\n            stdlib.assert(v655, {\n              at: 'reach standard library:209:7:dot',\n              fs: ['at ./index.rsh:118:43:application call to \"closeTo\" (defined at: reach standard library:207:8:function exp)'],\n              msg: 'sender correct',\n              who: 'Bob'\n              });\n            sim_r.txns.push({\n              amt: v446,\n              kind: 'from',\n              to: v434,\n              tok: undefined\n              });\n            sim_r.txns.push({\n              kind: 'halt',\n              tok: undefined\n              })\n            sim_r.isHalt = true;\n            \n            return sim_r;\n            }),\n          soloSend: true,\n          timeoutAt: undefined,\n          tys: [ctc4, ctc0, ctc4, ctc0, ctc0],\n          waitIfNotPresent: false\n          }));\n        const [] = txn4.data;\n        const v652 = txn4.time;\n        const v653 = txn4.secs;\n        const v651 = txn4.from;\n        ;\n        const v655 = stdlib.addressEq(v434, v651);\n        stdlib.assert(v655, {\n          at: 'reach standard library:209:7:dot',\n          fs: ['at ./index.rsh:118:43:application call to \"closeTo\" (defined at: reach standard library:207:8:function exp)'],\n          msg: 'sender correct',\n          who: 'Bob'\n          });\n        ;\n        stdlib.protect(ctc1, await interact.informTimeout(), {\n          at: './index.rsh:85:35:application',\n          fs: ['at ./index.rsh:84:15:application call to [unknown function] (defined at: ./index.rsh:84:27:function exp)', 'at reach standard library:212:8:application call to \"after\" (defined at: ./index.rsh:83:34:function exp)', 'at ./index.rsh:118:43:application call to \"closeTo\" (defined at: reach standard library:207:8:function exp)'],\n          msg: 'informTimeout',\n          who: 'Bob'\n          });\n        \n        return;\n        }\n      else {\n        const [v469] = txn3.data;\n        const v470 = txn3.time;\n        const v471 = txn3.secs;\n        const v468 = txn3.from;\n        ;\n        const v473 = stdlib.addressEq(v423, v468);\n        stdlib.assert(v473, {\n          at: './index.rsh:117:11:dot',\n          fs: [],\n          msg: 'sender correct',\n          who: 'Bob'\n          });\n        const v475 = stdlib.add(v470, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n        const txn4 = await (ctc.recv({\n          evt_cnt: 1,\n          funcNum: 8,\n          out_tys: [ctc2],\n          timeoutAt: ['time', v475],\n          waitIfNotPresent: false\n          }));\n        if (txn4.didTimeout) {\n          const txn5 = await (ctc.sendrecv({\n            args: [v423, v424, v434, v446, v469, v475],\n            evt_cnt: 0,\n            funcNum: 9,\n            onlyIf: true,\n            out_tys: [],\n            pay: [stdlib.checkedBigNumberify('reach standard library:decimal', stdlib.UInt_max, 0), []],\n            sim_p: (async (txn5) => {\n              const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n              \n              const [] = txn5.data;\n              const v635 = txn5.time;\n              const v636 = txn5.secs;\n              const v634 = txn5.from;\n              \n              sim_r.txns.push({\n                amt: stdlib.checkedBigNumberify('reach standard library:decimal', stdlib.UInt_max, 0),\n                kind: 'to',\n                tok: undefined\n                });\n              const v638 = stdlib.addressEq(v434, v634);\n              stdlib.assert(v638, {\n                at: 'reach standard library:209:7:dot',\n                fs: ['at ./index.rsh:122:43:application call to \"closeTo\" (defined at: reach standard library:207:8:function exp)'],\n                msg: 'sender correct',\n                who: 'Bob'\n                });\n              sim_r.txns.push({\n                amt: v446,\n                kind: 'from',\n                to: v434,\n                tok: undefined\n                });\n              sim_r.txns.push({\n                kind: 'halt',\n                tok: undefined\n                })\n              sim_r.isHalt = true;\n              \n              return sim_r;\n              }),\n            soloSend: true,\n            timeoutAt: undefined,\n            tys: [ctc4, ctc0, ctc4, ctc0, ctc2, ctc0],\n            waitIfNotPresent: false\n            }));\n          const [] = txn5.data;\n          const v635 = txn5.time;\n          const v636 = txn5.secs;\n          const v634 = txn5.from;\n          ;\n          const v638 = stdlib.addressEq(v434, v634);\n          stdlib.assert(v638, {\n            at: 'reach standard library:209:7:dot',\n            fs: ['at ./index.rsh:122:43:application call to \"closeTo\" (defined at: reach standard library:207:8:function exp)'],\n            msg: 'sender correct',\n            who: 'Bob'\n            });\n          ;\n          stdlib.protect(ctc1, await interact.informTimeout(), {\n            at: './index.rsh:85:35:application',\n            fs: ['at ./index.rsh:84:15:application call to [unknown function] (defined at: ./index.rsh:84:27:function exp)', 'at reach standard library:212:8:application call to \"after\" (defined at: ./index.rsh:83:34:function exp)', 'at ./index.rsh:122:43:application call to \"closeTo\" (defined at: reach standard library:207:8:function exp)'],\n            msg: 'informTimeout',\n            who: 'Bob'\n            });\n          \n          return;\n          }\n        else {\n          const [v478] = txn4.data;\n          const v479 = txn4.time;\n          const v480 = txn4.secs;\n          const v477 = txn4.from;\n          ;\n          const v482 = stdlib.addressEq(v423, v477);\n          stdlib.assert(v482, {\n            at: './index.rsh:121:11:dot',\n            fs: [],\n            msg: 'sender correct',\n            who: 'Bob'\n            });\n          const v484 = stdlib.add(v479, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n          const v488 = stdlib.protect(ctc0, await interact.getFingers(), {\n            at: './index.rsh:131:48:application',\n            fs: ['at ./index.rsh:129:15:application call to [unknown function] (defined at: ./index.rsh:129:19:function exp)'],\n            msg: 'getFingers',\n            who: 'Bob'\n            });\n          const v489 = stdlib.protect(ctc0, await interact.getGuess(v488), {\n            at: './index.rsh:133:44:application',\n            fs: ['at ./index.rsh:129:15:application call to [unknown function] (defined at: ./index.rsh:129:19:function exp)'],\n            msg: 'getGuess',\n            who: 'Bob'\n            });\n          \n          const txn5 = await (ctc.sendrecv({\n            args: [v423, v424, v434, v446, v469, v478, v484, v488],\n            evt_cnt: 1,\n            funcNum: 10,\n            onlyIf: true,\n            out_tys: [ctc0],\n            pay: [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []],\n            sim_p: (async (txn5) => {\n              const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n              \n              const [v491] = txn5.data;\n              const v492 = txn5.time;\n              const v493 = txn5.secs;\n              const v490 = txn5.from;\n              \n              sim_r.txns.push({\n                amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n                kind: 'to',\n                tok: undefined\n                });\n              const v495 = stdlib.addressEq(v434, v490);\n              stdlib.assert(v495, {\n                at: './index.rsh:140:11:dot',\n                fs: [],\n                msg: 'sender correct',\n                who: 'Bob'\n                });\n              const v497 = stdlib.add(v492, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n              sim_r.isHalt = false;\n              \n              return sim_r;\n              }),\n            soloSend: true,\n            timeoutAt: ['time', v484],\n            tys: [ctc4, ctc0, ctc4, ctc0, ctc2, ctc2, ctc0, ctc0],\n            waitIfNotPresent: false\n            }));\n          if (txn5.didTimeout) {\n            const txn6 = await (ctc.recv({\n              evt_cnt: 0,\n              funcNum: 11,\n              out_tys: [],\n              timeoutAt: undefined,\n              waitIfNotPresent: false\n              }));\n            const [] = txn6.data;\n            const v618 = txn6.time;\n            const v619 = txn6.secs;\n            const v617 = txn6.from;\n            ;\n            const v621 = stdlib.addressEq(v423, v617);\n            stdlib.assert(v621, {\n              at: 'reach standard library:209:7:dot',\n              fs: ['at ./index.rsh:141:43:application call to \"closeTo\" (defined at: reach standard library:207:8:function exp)'],\n              msg: 'sender correct',\n              who: 'Bob'\n              });\n            ;\n            stdlib.protect(ctc1, await interact.informTimeout(), {\n              at: './index.rsh:85:35:application',\n              fs: ['at ./index.rsh:84:15:application call to [unknown function] (defined at: ./index.rsh:84:27:function exp)', 'at reach standard library:212:8:application call to \"after\" (defined at: ./index.rsh:83:34:function exp)', 'at ./index.rsh:141:43:application call to \"closeTo\" (defined at: reach standard library:207:8:function exp)'],\n              msg: 'informTimeout',\n              who: 'Bob'\n              });\n            \n            return;\n            }\n          else {\n            const [v491] = txn5.data;\n            const v492 = txn5.time;\n            const v493 = txn5.secs;\n            const v490 = txn5.from;\n            ;\n            const v495 = stdlib.addressEq(v434, v490);\n            stdlib.assert(v495, {\n              at: './index.rsh:140:11:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'Bob'\n              });\n            const v497 = stdlib.add(v492, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n            const txn6 = await (ctc.sendrecv({\n              args: [v423, v424, v434, v446, v469, v478, v491, v497, v489],\n              evt_cnt: 1,\n              funcNum: 12,\n              onlyIf: true,\n              out_tys: [ctc0],\n              pay: [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []],\n              sim_p: (async (txn6) => {\n                const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n                \n                const [v500] = txn6.data;\n                const v501 = txn6.time;\n                const v502 = txn6.secs;\n                const v499 = txn6.from;\n                \n                sim_r.txns.push({\n                  amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n                  kind: 'to',\n                  tok: undefined\n                  });\n                const v504 = stdlib.addressEq(v434, v499);\n                stdlib.assert(v504, {\n                  at: './index.rsh:143:11:dot',\n                  fs: [],\n                  msg: 'sender correct',\n                  who: 'Bob'\n                  });\n                const v506 = stdlib.add(v501, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n                sim_r.isHalt = false;\n                \n                return sim_r;\n                }),\n              soloSend: true,\n              timeoutAt: ['time', v497],\n              tys: [ctc4, ctc0, ctc4, ctc0, ctc2, ctc2, ctc0, ctc0, ctc0],\n              waitIfNotPresent: false\n              }));\n            if (txn6.didTimeout) {\n              const txn7 = await (ctc.recv({\n                evt_cnt: 0,\n                funcNum: 13,\n                out_tys: [],\n                timeoutAt: undefined,\n                waitIfNotPresent: false\n                }));\n              const [] = txn7.data;\n              const v601 = txn7.time;\n              const v602 = txn7.secs;\n              const v600 = txn7.from;\n              ;\n              const v604 = stdlib.addressEq(v423, v600);\n              stdlib.assert(v604, {\n                at: 'reach standard library:209:7:dot',\n                fs: ['at ./index.rsh:144:43:application call to \"closeTo\" (defined at: reach standard library:207:8:function exp)'],\n                msg: 'sender correct',\n                who: 'Bob'\n                });\n              ;\n              stdlib.protect(ctc1, await interact.informTimeout(), {\n                at: './index.rsh:85:35:application',\n                fs: ['at ./index.rsh:84:15:application call to [unknown function] (defined at: ./index.rsh:84:27:function exp)', 'at reach standard library:212:8:application call to \"after\" (defined at: ./index.rsh:83:34:function exp)', 'at ./index.rsh:144:43:application call to \"closeTo\" (defined at: reach standard library:207:8:function exp)'],\n                msg: 'informTimeout',\n                who: 'Bob'\n                });\n              \n              return;\n              }\n            else {\n              const [v500] = txn6.data;\n              const v501 = txn6.time;\n              const v502 = txn6.secs;\n              const v499 = txn6.from;\n              ;\n              const v504 = stdlib.addressEq(v434, v499);\n              stdlib.assert(v504, {\n                at: './index.rsh:143:11:dot',\n                fs: [],\n                msg: 'sender correct',\n                who: 'Bob'\n                });\n              const v506 = stdlib.add(v501, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n              const txn7 = await (ctc.recv({\n                evt_cnt: 2,\n                funcNum: 14,\n                out_tys: [ctc0, ctc0],\n                timeoutAt: ['time', v506],\n                waitIfNotPresent: false\n                }));\n              if (txn7.didTimeout) {\n                const txn8 = await (ctc.sendrecv({\n                  args: [v423, v424, v434, v446, v469, v478, v491, v500, v506],\n                  evt_cnt: 0,\n                  funcNum: 15,\n                  onlyIf: true,\n                  out_tys: [],\n                  pay: [stdlib.checkedBigNumberify('reach standard library:decimal', stdlib.UInt_max, 0), []],\n                  sim_p: (async (txn8) => {\n                    const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n                    \n                    const [] = txn8.data;\n                    const v584 = txn8.time;\n                    const v585 = txn8.secs;\n                    const v583 = txn8.from;\n                    \n                    sim_r.txns.push({\n                      amt: stdlib.checkedBigNumberify('reach standard library:decimal', stdlib.UInt_max, 0),\n                      kind: 'to',\n                      tok: undefined\n                      });\n                    const v587 = stdlib.addressEq(v434, v583);\n                    stdlib.assert(v587, {\n                      at: 'reach standard library:209:7:dot',\n                      fs: ['at ./index.rsh:155:43:application call to \"closeTo\" (defined at: reach standard library:207:8:function exp)'],\n                      msg: 'sender correct',\n                      who: 'Bob'\n                      });\n                    sim_r.txns.push({\n                      amt: v446,\n                      kind: 'from',\n                      to: v434,\n                      tok: undefined\n                      });\n                    sim_r.txns.push({\n                      kind: 'halt',\n                      tok: undefined\n                      })\n                    sim_r.isHalt = true;\n                    \n                    return sim_r;\n                    }),\n                  soloSend: true,\n                  timeoutAt: undefined,\n                  tys: [ctc4, ctc0, ctc4, ctc0, ctc2, ctc2, ctc0, ctc0, ctc0],\n                  waitIfNotPresent: false\n                  }));\n                const [] = txn8.data;\n                const v584 = txn8.time;\n                const v585 = txn8.secs;\n                const v583 = txn8.from;\n                ;\n                const v587 = stdlib.addressEq(v434, v583);\n                stdlib.assert(v587, {\n                  at: 'reach standard library:209:7:dot',\n                  fs: ['at ./index.rsh:155:43:application call to \"closeTo\" (defined at: reach standard library:207:8:function exp)'],\n                  msg: 'sender correct',\n                  who: 'Bob'\n                  });\n                ;\n                stdlib.protect(ctc1, await interact.informTimeout(), {\n                  at: './index.rsh:85:35:application',\n                  fs: ['at ./index.rsh:84:15:application call to [unknown function] (defined at: ./index.rsh:84:27:function exp)', 'at reach standard library:212:8:application call to \"after\" (defined at: ./index.rsh:83:34:function exp)', 'at ./index.rsh:155:43:application call to \"closeTo\" (defined at: reach standard library:207:8:function exp)'],\n                  msg: 'informTimeout',\n                  who: 'Bob'\n                  });\n                \n                return;\n                }\n              else {\n                const [v511, v512] = txn7.data;\n                const v513 = txn7.time;\n                const v514 = txn7.secs;\n                const v510 = txn7.from;\n                ;\n                const v516 = stdlib.addressEq(v423, v510);\n                stdlib.assert(v516, {\n                  at: './index.rsh:154:11:dot',\n                  fs: [],\n                  msg: 'sender correct',\n                  who: 'Bob'\n                  });\n                const v517 = stdlib.digest(ctc3, [v511, v512]);\n                const v518 = stdlib.digestEq(v469, v517);\n                stdlib.assert(v518, {\n                  at: 'reach standard library:65:17:application',\n                  fs: ['at ./index.rsh:157:24:application call to \"checkCommitment\" (defined at: reach standard library:64:8:function exp)'],\n                  msg: null,\n                  who: 'Bob'\n                  });\n                const v520 = stdlib.add(v513, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n                const txn8 = await (ctc.recv({\n                  evt_cnt: 2,\n                  funcNum: 16,\n                  out_tys: [ctc0, ctc0],\n                  timeoutAt: ['time', v520],\n                  waitIfNotPresent: false\n                  }));\n                if (txn8.didTimeout) {\n                  const txn9 = await (ctc.sendrecv({\n                    args: [v423, v424, v434, v446, v478, v491, v500, v512, v520],\n                    evt_cnt: 0,\n                    funcNum: 17,\n                    onlyIf: true,\n                    out_tys: [],\n                    pay: [stdlib.checkedBigNumberify('reach standard library:decimal', stdlib.UInt_max, 0), []],\n                    sim_p: (async (txn9) => {\n                      const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n                      \n                      const [] = txn9.data;\n                      const v567 = txn9.time;\n                      const v568 = txn9.secs;\n                      const v566 = txn9.from;\n                      \n                      sim_r.txns.push({\n                        amt: stdlib.checkedBigNumberify('reach standard library:decimal', stdlib.UInt_max, 0),\n                        kind: 'to',\n                        tok: undefined\n                        });\n                      const v570 = stdlib.addressEq(v434, v566);\n                      stdlib.assert(v570, {\n                        at: 'reach standard library:209:7:dot',\n                        fs: ['at ./index.rsh:161:41:application call to \"closeTo\" (defined at: reach standard library:207:8:function exp)'],\n                        msg: 'sender correct',\n                        who: 'Bob'\n                        });\n                      sim_r.txns.push({\n                        amt: v446,\n                        kind: 'from',\n                        to: v434,\n                        tok: undefined\n                        });\n                      sim_r.txns.push({\n                        kind: 'halt',\n                        tok: undefined\n                        })\n                      sim_r.isHalt = true;\n                      \n                      return sim_r;\n                      }),\n                    soloSend: true,\n                    timeoutAt: undefined,\n                    tys: [ctc4, ctc0, ctc4, ctc0, ctc2, ctc0, ctc0, ctc0, ctc0],\n                    waitIfNotPresent: false\n                    }));\n                  const [] = txn9.data;\n                  const v567 = txn9.time;\n                  const v568 = txn9.secs;\n                  const v566 = txn9.from;\n                  ;\n                  const v570 = stdlib.addressEq(v434, v566);\n                  stdlib.assert(v570, {\n                    at: 'reach standard library:209:7:dot',\n                    fs: ['at ./index.rsh:161:41:application call to \"closeTo\" (defined at: reach standard library:207:8:function exp)'],\n                    msg: 'sender correct',\n                    who: 'Bob'\n                    });\n                  ;\n                  stdlib.protect(ctc1, await interact.informTimeout(), {\n                    at: './index.rsh:85:35:application',\n                    fs: ['at ./index.rsh:84:15:application call to [unknown function] (defined at: ./index.rsh:84:27:function exp)', 'at reach standard library:212:8:application call to \"after\" (defined at: ./index.rsh:83:34:function exp)', 'at ./index.rsh:161:41:application call to \"closeTo\" (defined at: reach standard library:207:8:function exp)'],\n                    msg: 'informTimeout',\n                    who: 'Bob'\n                    });\n                  \n                  return;\n                  }\n                else {\n                  const [v523, v524] = txn8.data;\n                  const v525 = txn8.time;\n                  const v526 = txn8.secs;\n                  const v522 = txn8.from;\n                  ;\n                  const v528 = stdlib.addressEq(v423, v522);\n                  stdlib.assert(v528, {\n                    at: './index.rsh:160:11:dot',\n                    fs: [],\n                    msg: 'sender correct',\n                    who: 'Bob'\n                    });\n                  const v529 = stdlib.digest(ctc3, [v523, v524]);\n                  const v530 = stdlib.digestEq(v478, v529);\n                  stdlib.assert(v530, {\n                    at: 'reach standard library:65:17:application',\n                    fs: ['at ./index.rsh:162:24:application call to \"checkCommitment\" (defined at: reach standard library:64:8:function exp)'],\n                    msg: null,\n                    who: 'Bob'\n                    });\n                  const v532 = stdlib.add(v525, stdlib.checkedBigNumberify('./index.rsh:76:18:decimal', stdlib.UInt_max, 30));\n                  const txn9 = await (ctc.recv({\n                    evt_cnt: 1,\n                    funcNum: 18,\n                    out_tys: [ctc0],\n                    timeoutAt: ['time', v532],\n                    waitIfNotPresent: false\n                    }));\n                  if (txn9.didTimeout) {\n                    const txn10 = await (ctc.recv({\n                      evt_cnt: 0,\n                      funcNum: 19,\n                      out_tys: [],\n                      timeoutAt: undefined,\n                      waitIfNotPresent: false\n                      }));\n                    const [] = txn10.data;\n                    const v550 = txn10.time;\n                    const v551 = txn10.secs;\n                    const v549 = txn10.from;\n                    ;\n                    const v553 = stdlib.addressEq(v423, v549);\n                    stdlib.assert(v553, {\n                      at: 'reach standard library:209:7:dot',\n                      fs: ['at ./index.rsh:172:41:application call to \"closeTo\" (defined at: reach standard library:207:8:function exp)'],\n                      msg: 'sender correct',\n                      who: 'Bob'\n                      });\n                    ;\n                    stdlib.protect(ctc1, await interact.informTimeout(), {\n                      at: './index.rsh:85:35:application',\n                      fs: ['at ./index.rsh:84:15:application call to [unknown function] (defined at: ./index.rsh:84:27:function exp)', 'at reach standard library:212:8:application call to \"after\" (defined at: ./index.rsh:83:34:function exp)', 'at ./index.rsh:172:41:application call to \"closeTo\" (defined at: reach standard library:207:8:function exp)'],\n                      msg: 'informTimeout',\n                      who: 'Bob'\n                      });\n                    \n                    return;\n                    }\n                  else {\n                    const [v538] = txn9.data;\n                    const v539 = txn9.time;\n                    const v540 = txn9.secs;\n                    const v537 = txn9.from;\n                    ;\n                    const v542 = stdlib.addressEq(v423, v537);\n                    stdlib.assert(v542, {\n                      at: './index.rsh:171:11:dot',\n                      fs: [],\n                      msg: 'sender correct',\n                      who: 'Bob'\n                      });\n                    let v543;\n                    const v544 = stdlib.eq(v524, v500);\n                    if (v544) {\n                      v543 = stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 1);\n                      }\n                    else {\n                      const v545 = stdlib.add(v512, v491);\n                      const v546 = stdlib.eq(v545, v524);\n                      if (v546) {\n                        v543 = stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 2);\n                        }\n                      else {\n                        const v548 = stdlib.eq(v545, v500);\n                        if (v548) {\n                          v543 = stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 0);\n                          }\n                        else {\n                          v543 = stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 1);\n                          }\n                        }\n                      }\n                    const cv439 = v543;\n                    const cv440 = v539;\n                    const cv446 = v446;\n                    \n                    v439 = cv439;\n                    v440 = cv440;\n                    v446 = cv446;\n                    \n                    continue;}\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    const v668 = stdlib.eq(v439, stdlib.checkedBigNumberify('./index.rsh:makeEnum', stdlib.UInt_max, 2));\n    const v671 = stdlib.mul(stdlib.checkedBigNumberify('./index.rsh:181:16:decimal', stdlib.UInt_max, 2), v424);\n    const v673 = v668 ? v423 : v434;\n    ;\n    stdlib.protect(ctc1, await interact.seeOutcome(v439), {\n      at: './index.rsh:185:28:application',\n      fs: ['at ./index.rsh:184:11:application call to [unknown function] (defined at: ./index.rsh:184:23:function exp)'],\n      msg: 'seeOutcome',\n      who: 'Bob'\n      });\n    \n    return;}\n  \n  \n  };\n\nconst _ALGO = {\n  appApproval: `#pragma version 4\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn Lease\nglobal ZeroAddress\n==\nassert\nint 0\nstore 0\ntxn ApplicationID\nbz alloc\nbyte base64()\napp_global_get\ndup\nsubstring 0 32\nstore 1\nsubstring 32 64\nstore 2\ntxn NumAppArgs\nint 3\n==\nassert\ntxna ApplicationArgs 0\nbtoi\ndup\nbz ctor\n// Handler 1\ndup\nint 1\n==\nbz l0\npop\ntxna ApplicationArgs 1\ndup\nlen\nint 0\n==\nassert\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 8\n==\nassert\ndup\nbtoi\nstore 255\npop\n// compute state in HM_Check 0\nint 8\nbzero\nsha256\nload 1\n==\nassert\n// \"CheckPay\"\n// \"./index.rsh:88:9:dot\"\n// \"[]\"\nload 255\ndup\nbz l1\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 2\ndig 1\ngtxns Receiver\n==\nassert\nl1:\npop\nglobal Round\nint 30\n+\nstore 254\n// compute state in HM_Set 1\nbyte base64(AAAAAAAAAAE=)\ntxn Sender\nconcat\nload 255\nitob\nconcat\nload 254\nitob\nconcat\nsha256\nstore 1\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl0:\n// Handler 2\ndup\nint 2\n==\nbz l2\npop\ntxna ApplicationArgs 1\ndup\nlen\nint 48\n==\nassert\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 40\nbtoi\nstore 254\ndup\nsubstring 40 48\nbtoi\nstore 253\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// compute state in HM_Check 1\nbyte base64(AAAAAAAAAAE=)\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nitob\nconcat\nsha256\nload 1\n==\nassert\nglobal Round\nload 253\n<\nassert\n// \"CheckPay\"\n// \"./index.rsh:94:9:dot\"\n// \"[]\"\nload 254\ndup\nbz l3\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 2\ndig 1\ngtxns Receiver\n==\nassert\nl3:\npop\nload 255\nload 254\nitob\nconcat\ntxn Sender\nconcat\nbyte base64(AAAAAAAAAAE=)\nglobal Round\nitob\nconcat\nload 254\ndup\n+\nitob\nconcat\nb loop4\nl2:\n// Handler 3\ndup\nint 3\n==\nbz l4\npop\ntxna ApplicationArgs 1\ndup\nlen\nint 48\n==\nassert\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 40\nbtoi\nstore 254\ndup\nsubstring 40 48\nbtoi\nstore 253\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// compute state in HM_Check 1\nbyte base64(AAAAAAAAAAE=)\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nitob\nconcat\nsha256\nload 1\n==\nassert\nglobal Round\nload 253\n>=\nassert\n// \"CheckPay\"\n// \"reach standard library:209:7:dot\"\n// \"[at ./index.rsh:95:41:application call to \\\"closeTo\\\" (defined at: reach standard library:207:8:function exp)]\"\n// Just \"sender correct\"\n// \"reach standard library:209:7:dot\"\n// \"[at ./index.rsh:95:41:application call to \\\"closeTo\\\" (defined at: reach standard library:207:8:function exp)]\"\nload 255\ntxn Sender\n==\nassert\nload 254\ndup\nbz l5\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 2\ndig 1\ngtxns Sender\n==\nassert\nload 255\ndig 1\ngtxns Receiver\n==\nassert\nl5:\npop\nint 0\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 2\ndig 1\ngtxns Sender\n==\nassert\nglobal CreatorAddress\ndig 1\ngtxns CloseRemainderTo\n==\nassert\nl6:\npop\nglobal ZeroAddress\nstore 1\ntxn OnCompletion\nint DeleteApplication\n==\nassert\nb updateState\nl4:\nl7:\nl8:\n// Handler 6\ndup\nint 6\n==\nbz l9\npop\ntxna ApplicationArgs 1\ndup\nlen\nint 88\n==\nassert\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 40\nbtoi\nstore 254\ndup\nsubstring 40 72\nstore 253\ndup\nsubstring 72 80\nbtoi\nstore 252\ndup\nsubstring 80 88\nbtoi\nstore 251\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 32\n==\nassert\ndup\nstore 250\npop\n// compute state in HM_Check 6\nbyte base64(AAAAAAAAAAY=)\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nload 252\nitob\nconcat\nload 251\nitob\nconcat\nsha256\nload 1\n==\nassert\nglobal Round\nload 251\n<\nassert\n// \"CheckPay\"\n// \"./index.rsh:117:11:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:117:11:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\nglobal Round\nint 30\n+\nstore 249\n// compute state in HM_Set 8\nbyte base64(AAAAAAAAAAg=)\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nload 252\nitob\nconcat\nload 250\nconcat\nload 249\nitob\nconcat\nsha256\nstore 1\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl9:\n// Handler 7\ndup\nint 7\n==\nbz l10\npop\ntxna ApplicationArgs 1\ndup\nlen\nint 88\n==\nassert\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 40\nbtoi\nstore 254\ndup\nsubstring 40 72\nstore 253\ndup\nsubstring 72 80\nbtoi\nstore 252\ndup\nsubstring 80 88\nbtoi\nstore 251\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// compute state in HM_Check 6\nbyte base64(AAAAAAAAAAY=)\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nload 252\nitob\nconcat\nload 251\nitob\nconcat\nsha256\nload 1\n==\nassert\nglobal Round\nload 251\n>=\nassert\n// \"CheckPay\"\n// \"reach standard library:209:7:dot\"\n// \"[at ./index.rsh:118:43:application call to \\\"closeTo\\\" (defined at: reach standard library:207:8:function exp)]\"\n// Just \"sender correct\"\n// \"reach standard library:209:7:dot\"\n// \"[at ./index.rsh:118:43:application call to \\\"closeTo\\\" (defined at: reach standard library:207:8:function exp)]\"\nload 253\ntxn Sender\n==\nassert\nload 252\ndup\nbz l11\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 2\ndig 1\ngtxns Sender\n==\nassert\nload 253\ndig 1\ngtxns Receiver\n==\nassert\nl11:\npop\nint 0\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 2\ndig 1\ngtxns Sender\n==\nassert\nglobal CreatorAddress\ndig 1\ngtxns CloseRemainderTo\n==\nassert\nl12:\npop\nglobal ZeroAddress\nstore 1\ntxn OnCompletion\nint DeleteApplication\n==\nassert\nb updateState\nl10:\n// Handler 8\ndup\nint 8\n==\nbz l13\npop\ntxna ApplicationArgs 1\ndup\nlen\nint 120\n==\nassert\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 40\nbtoi\nstore 254\ndup\nsubstring 40 72\nstore 253\ndup\nsubstring 72 80\nbtoi\nstore 252\ndup\nsubstring 80 112\nstore 251\ndup\nsubstring 112 120\nbtoi\nstore 250\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 32\n==\nassert\ndup\nstore 249\npop\n// compute state in HM_Check 8\nbyte base64(AAAAAAAAAAg=)\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nload 252\nitob\nconcat\nload 251\nconcat\nload 250\nitob\nconcat\nsha256\nload 1\n==\nassert\nglobal Round\nload 250\n<\nassert\n// \"CheckPay\"\n// \"./index.rsh:121:11:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:121:11:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\nglobal Round\nint 30\n+\nstore 248\n// compute state in HM_Set 10\nbyte base64(AAAAAAAAAAo=)\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nload 252\nitob\nconcat\nload 251\nconcat\nload 249\nconcat\nload 248\nitob\nconcat\nsha256\nstore 1\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl13:\n// Handler 9\ndup\nint 9\n==\nbz l14\npop\ntxna ApplicationArgs 1\ndup\nlen\nint 120\n==\nassert\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 40\nbtoi\nstore 254\ndup\nsubstring 40 72\nstore 253\ndup\nsubstring 72 80\nbtoi\nstore 252\ndup\nsubstring 80 112\nstore 251\ndup\nsubstring 112 120\nbtoi\nstore 250\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// compute state in HM_Check 8\nbyte base64(AAAAAAAAAAg=)\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nload 252\nitob\nconcat\nload 251\nconcat\nload 250\nitob\nconcat\nsha256\nload 1\n==\nassert\nglobal Round\nload 250\n>=\nassert\n// \"CheckPay\"\n// \"reach standard library:209:7:dot\"\n// \"[at ./index.rsh:122:43:application call to \\\"closeTo\\\" (defined at: reach standard library:207:8:function exp)]\"\n// Just \"sender correct\"\n// \"reach standard library:209:7:dot\"\n// \"[at ./index.rsh:122:43:application call to \\\"closeTo\\\" (defined at: reach standard library:207:8:function exp)]\"\nload 253\ntxn Sender\n==\nassert\nload 252\ndup\nbz l15\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 2\ndig 1\ngtxns Sender\n==\nassert\nload 253\ndig 1\ngtxns Receiver\n==\nassert\nl15:\npop\nint 0\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 2\ndig 1\ngtxns Sender\n==\nassert\nglobal CreatorAddress\ndig 1\ngtxns CloseRemainderTo\n==\nassert\nl16:\npop\nglobal ZeroAddress\nstore 1\ntxn OnCompletion\nint DeleteApplication\n==\nassert\nb updateState\nl14:\n// Handler 10\ndup\nint 10\n==\nbz l17\npop\ntxna ApplicationArgs 1\ndup\nlen\nint 152\n==\nassert\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 40\nbtoi\nstore 254\ndup\nsubstring 40 72\nstore 253\ndup\nsubstring 72 80\nbtoi\nstore 252\ndup\nsubstring 80 112\nstore 251\ndup\nsubstring 112 144\nstore 250\ndup\nsubstring 144 152\nbtoi\nstore 249\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 8\n==\nassert\ndup\nbtoi\nstore 248\npop\n// compute state in HM_Check 10\nbyte base64(AAAAAAAAAAo=)\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nload 252\nitob\nconcat\nload 251\nconcat\nload 250\nconcat\nload 249\nitob\nconcat\nsha256\nload 1\n==\nassert\nglobal Round\nload 249\n<\nassert\n// \"CheckPay\"\n// \"./index.rsh:140:11:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:140:11:dot\"\n// \"[]\"\nload 253\ntxn Sender\n==\nassert\nglobal Round\nint 30\n+\nstore 247\n// compute state in HM_Set 12\nbyte base64(AAAAAAAAAAw=)\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nload 252\nitob\nconcat\nload 251\nconcat\nload 250\nconcat\nload 248\nitob\nconcat\nload 247\nitob\nconcat\nsha256\nstore 1\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl17:\n// Handler 11\ndup\nint 11\n==\nbz l18\npop\ntxna ApplicationArgs 1\ndup\nlen\nint 152\n==\nassert\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 40\nbtoi\nstore 254\ndup\nsubstring 40 72\nstore 253\ndup\nsubstring 72 80\nbtoi\nstore 252\ndup\nsubstring 80 112\nstore 251\ndup\nsubstring 112 144\nstore 250\ndup\nsubstring 144 152\nbtoi\nstore 249\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// compute state in HM_Check 10\nbyte base64(AAAAAAAAAAo=)\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nload 252\nitob\nconcat\nload 251\nconcat\nload 250\nconcat\nload 249\nitob\nconcat\nsha256\nload 1\n==\nassert\nglobal Round\nload 249\n>=\nassert\n// \"CheckPay\"\n// \"reach standard library:209:7:dot\"\n// \"[at ./index.rsh:141:43:application call to \\\"closeTo\\\" (defined at: reach standard library:207:8:function exp)]\"\n// Just \"sender correct\"\n// \"reach standard library:209:7:dot\"\n// \"[at ./index.rsh:141:43:application call to \\\"closeTo\\\" (defined at: reach standard library:207:8:function exp)]\"\nload 255\ntxn Sender\n==\nassert\nload 252\ndup\nbz l19\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 2\ndig 1\ngtxns Sender\n==\nassert\nload 255\ndig 1\ngtxns Receiver\n==\nassert\nl19:\npop\nint 0\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 2\ndig 1\ngtxns Sender\n==\nassert\nglobal CreatorAddress\ndig 1\ngtxns CloseRemainderTo\n==\nassert\nl20:\npop\nglobal ZeroAddress\nstore 1\ntxn OnCompletion\nint DeleteApplication\n==\nassert\nb updateState\nl18:\n// Handler 12\ndup\nint 12\n==\nbz l21\npop\ntxna ApplicationArgs 1\ndup\nlen\nint 160\n==\nassert\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 40\nbtoi\nstore 254\ndup\nsubstring 40 72\nstore 253\ndup\nsubstring 72 80\nbtoi\nstore 252\ndup\nsubstring 80 112\nstore 251\ndup\nsubstring 112 144\nstore 250\ndup\nsubstring 144 152\nbtoi\nstore 249\ndup\nsubstring 152 160\nbtoi\nstore 248\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 8\n==\nassert\ndup\nbtoi\nstore 247\npop\n// compute state in HM_Check 12\nbyte base64(AAAAAAAAAAw=)\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nload 252\nitob\nconcat\nload 251\nconcat\nload 250\nconcat\nload 249\nitob\nconcat\nload 248\nitob\nconcat\nsha256\nload 1\n==\nassert\nglobal Round\nload 248\n<\nassert\n// \"CheckPay\"\n// \"./index.rsh:143:11:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:143:11:dot\"\n// \"[]\"\nload 253\ntxn Sender\n==\nassert\nglobal Round\nint 30\n+\nstore 246\n// compute state in HM_Set 14\nbyte base64(AAAAAAAAAA4=)\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nload 252\nitob\nconcat\nload 251\nconcat\nload 250\nconcat\nload 249\nitob\nconcat\nload 247\nitob\nconcat\nload 246\nitob\nconcat\nsha256\nstore 1\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl21:\n// Handler 13\ndup\nint 13\n==\nbz l22\npop\ntxna ApplicationArgs 1\ndup\nlen\nint 160\n==\nassert\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 40\nbtoi\nstore 254\ndup\nsubstring 40 72\nstore 253\ndup\nsubstring 72 80\nbtoi\nstore 252\ndup\nsubstring 80 112\nstore 251\ndup\nsubstring 112 144\nstore 250\ndup\nsubstring 144 152\nbtoi\nstore 249\ndup\nsubstring 152 160\nbtoi\nstore 248\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// compute state in HM_Check 12\nbyte base64(AAAAAAAAAAw=)\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nload 252\nitob\nconcat\nload 251\nconcat\nload 250\nconcat\nload 249\nitob\nconcat\nload 248\nitob\nconcat\nsha256\nload 1\n==\nassert\nglobal Round\nload 248\n>=\nassert\n// \"CheckPay\"\n// \"reach standard library:209:7:dot\"\n// \"[at ./index.rsh:144:43:application call to \\\"closeTo\\\" (defined at: reach standard library:207:8:function exp)]\"\n// Just \"sender correct\"\n// \"reach standard library:209:7:dot\"\n// \"[at ./index.rsh:144:43:application call to \\\"closeTo\\\" (defined at: reach standard library:207:8:function exp)]\"\nload 255\ntxn Sender\n==\nassert\nload 252\ndup\nbz l23\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 2\ndig 1\ngtxns Sender\n==\nassert\nload 255\ndig 1\ngtxns Receiver\n==\nassert\nl23:\npop\nint 0\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 2\ndig 1\ngtxns Sender\n==\nassert\nglobal CreatorAddress\ndig 1\ngtxns CloseRemainderTo\n==\nassert\nl24:\npop\nglobal ZeroAddress\nstore 1\ntxn OnCompletion\nint DeleteApplication\n==\nassert\nb updateState\nl22:\n// Handler 14\ndup\nint 14\n==\nbz l25\npop\ntxna ApplicationArgs 1\ndup\nlen\nint 168\n==\nassert\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 40\nbtoi\nstore 254\ndup\nsubstring 40 72\nstore 253\ndup\nsubstring 72 80\nbtoi\nstore 252\ndup\nsubstring 80 112\nstore 251\ndup\nsubstring 112 144\nstore 250\ndup\nsubstring 144 152\nbtoi\nstore 249\ndup\nsubstring 152 160\nbtoi\nstore 248\ndup\nsubstring 160 168\nbtoi\nstore 247\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 16\n==\nassert\ndup\nsubstring 0 8\nbtoi\nstore 246\ndup\nsubstring 8 16\nbtoi\nstore 245\npop\n// compute state in HM_Check 14\nbyte base64(AAAAAAAAAA4=)\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nload 252\nitob\nconcat\nload 251\nconcat\nload 250\nconcat\nload 249\nitob\nconcat\nload 248\nitob\nconcat\nload 247\nitob\nconcat\nsha256\nload 1\n==\nassert\nglobal Round\nload 247\n<\nassert\n// \"CheckPay\"\n// \"./index.rsh:154:11:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:154:11:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\n// Nothing\n// \"reach standard library:65:17:application\"\n// \"[at ./index.rsh:157:24:application call to \\\"checkCommitment\\\" (defined at: reach standard library:64:8:function exp)]\"\nload 251\nload 246\nitob\nload 245\nitob\nconcat\nsha256\n==\nassert\nglobal Round\nint 30\n+\nstore 244\n// compute state in HM_Set 16\nbyte base64(AAAAAAAAABA=)\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nload 252\nitob\nconcat\nload 250\nconcat\nload 249\nitob\nconcat\nload 248\nitob\nconcat\nload 245\nitob\nconcat\nload 244\nitob\nconcat\nsha256\nstore 1\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl25:\n// Handler 15\ndup\nint 15\n==\nbz l26\npop\ntxna ApplicationArgs 1\ndup\nlen\nint 168\n==\nassert\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 40\nbtoi\nstore 254\ndup\nsubstring 40 72\nstore 253\ndup\nsubstring 72 80\nbtoi\nstore 252\ndup\nsubstring 80 112\nstore 251\ndup\nsubstring 112 144\nstore 250\ndup\nsubstring 144 152\nbtoi\nstore 249\ndup\nsubstring 152 160\nbtoi\nstore 248\ndup\nsubstring 160 168\nbtoi\nstore 247\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// compute state in HM_Check 14\nbyte base64(AAAAAAAAAA4=)\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nload 252\nitob\nconcat\nload 251\nconcat\nload 250\nconcat\nload 249\nitob\nconcat\nload 248\nitob\nconcat\nload 247\nitob\nconcat\nsha256\nload 1\n==\nassert\nglobal Round\nload 247\n>=\nassert\n// \"CheckPay\"\n// \"reach standard library:209:7:dot\"\n// \"[at ./index.rsh:155:43:application call to \\\"closeTo\\\" (defined at: reach standard library:207:8:function exp)]\"\n// Just \"sender correct\"\n// \"reach standard library:209:7:dot\"\n// \"[at ./index.rsh:155:43:application call to \\\"closeTo\\\" (defined at: reach standard library:207:8:function exp)]\"\nload 253\ntxn Sender\n==\nassert\nload 252\ndup\nbz l27\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 2\ndig 1\ngtxns Sender\n==\nassert\nload 253\ndig 1\ngtxns Receiver\n==\nassert\nl27:\npop\nint 0\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 2\ndig 1\ngtxns Sender\n==\nassert\nglobal CreatorAddress\ndig 1\ngtxns CloseRemainderTo\n==\nassert\nl28:\npop\nglobal ZeroAddress\nstore 1\ntxn OnCompletion\nint DeleteApplication\n==\nassert\nb updateState\nl26:\n// Handler 16\ndup\nint 16\n==\nbz l29\npop\ntxna ApplicationArgs 1\ndup\nlen\nint 144\n==\nassert\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 40\nbtoi\nstore 254\ndup\nsubstring 40 72\nstore 253\ndup\nsubstring 72 80\nbtoi\nstore 252\ndup\nsubstring 80 112\nstore 251\ndup\nsubstring 112 120\nbtoi\nstore 250\ndup\nsubstring 120 128\nbtoi\nstore 249\ndup\nsubstring 128 136\nbtoi\nstore 248\ndup\nsubstring 136 144\nbtoi\nstore 247\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 16\n==\nassert\ndup\nsubstring 0 8\nbtoi\nstore 246\ndup\nsubstring 8 16\nbtoi\nstore 245\npop\n// compute state in HM_Check 16\nbyte base64(AAAAAAAAABA=)\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nload 252\nitob\nconcat\nload 251\nconcat\nload 250\nitob\nconcat\nload 249\nitob\nconcat\nload 248\nitob\nconcat\nload 247\nitob\nconcat\nsha256\nload 1\n==\nassert\nglobal Round\nload 247\n<\nassert\n// \"CheckPay\"\n// \"./index.rsh:160:11:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:160:11:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\n// Nothing\n// \"reach standard library:65:17:application\"\n// \"[at ./index.rsh:162:24:application call to \\\"checkCommitment\\\" (defined at: reach standard library:64:8:function exp)]\"\nload 251\nload 246\nitob\nload 245\nitob\nconcat\nsha256\n==\nassert\nglobal Round\nint 30\n+\nstore 244\n// compute state in HM_Set 18\nbyte base64(AAAAAAAAABI=)\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nload 252\nitob\nconcat\nload 250\nitob\nconcat\nload 249\nitob\nconcat\nload 248\nitob\nconcat\nload 245\nitob\nconcat\nload 244\nitob\nconcat\nsha256\nstore 1\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl29:\n// Handler 17\ndup\nint 17\n==\nbz l30\npop\ntxna ApplicationArgs 1\ndup\nlen\nint 144\n==\nassert\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 40\nbtoi\nstore 254\ndup\nsubstring 40 72\nstore 253\ndup\nsubstring 72 80\nbtoi\nstore 252\ndup\nsubstring 80 112\nstore 251\ndup\nsubstring 112 120\nbtoi\nstore 250\ndup\nsubstring 120 128\nbtoi\nstore 249\ndup\nsubstring 128 136\nbtoi\nstore 248\ndup\nsubstring 136 144\nbtoi\nstore 247\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// compute state in HM_Check 16\nbyte base64(AAAAAAAAABA=)\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nload 252\nitob\nconcat\nload 251\nconcat\nload 250\nitob\nconcat\nload 249\nitob\nconcat\nload 248\nitob\nconcat\nload 247\nitob\nconcat\nsha256\nload 1\n==\nassert\nglobal Round\nload 247\n>=\nassert\n// \"CheckPay\"\n// \"reach standard library:209:7:dot\"\n// \"[at ./index.rsh:161:41:application call to \\\"closeTo\\\" (defined at: reach standard library:207:8:function exp)]\"\n// Just \"sender correct\"\n// \"reach standard library:209:7:dot\"\n// \"[at ./index.rsh:161:41:application call to \\\"closeTo\\\" (defined at: reach standard library:207:8:function exp)]\"\nload 253\ntxn Sender\n==\nassert\nload 252\ndup\nbz l31\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 2\ndig 1\ngtxns Sender\n==\nassert\nload 253\ndig 1\ngtxns Receiver\n==\nassert\nl31:\npop\nint 0\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 2\ndig 1\ngtxns Sender\n==\nassert\nglobal CreatorAddress\ndig 1\ngtxns CloseRemainderTo\n==\nassert\nl32:\npop\nglobal ZeroAddress\nstore 1\ntxn OnCompletion\nint DeleteApplication\n==\nassert\nb updateState\nl30:\n// Handler 18\ndup\nint 18\n==\nbz l33\npop\ntxna ApplicationArgs 1\ndup\nlen\nint 120\n==\nassert\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 40\nbtoi\nstore 254\ndup\nsubstring 40 72\nstore 253\ndup\nsubstring 72 80\nbtoi\nstore 252\ndup\nsubstring 80 88\nbtoi\nstore 251\ndup\nsubstring 88 96\nbtoi\nstore 250\ndup\nsubstring 96 104\nbtoi\nstore 249\ndup\nsubstring 104 112\nbtoi\nstore 248\ndup\nsubstring 112 120\nbtoi\nstore 247\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 8\n==\nassert\ndup\nbtoi\nstore 246\npop\n// compute state in HM_Check 18\nbyte base64(AAAAAAAAABI=)\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nload 252\nitob\nconcat\nload 251\nitob\nconcat\nload 250\nitob\nconcat\nload 249\nitob\nconcat\nload 248\nitob\nconcat\nload 247\nitob\nconcat\nsha256\nload 1\n==\nassert\nglobal Round\nload 247\n<\nassert\n// \"CheckPay\"\n// \"./index.rsh:171:11:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:171:11:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\nload 248\nload 250\n==\nbz l34\nint 1\nstore 245\nb l35\nl34:\nload 249\nload 251\n+\ndup\nstore 244\nload 248\n==\nbz l36\nint 2\nstore 245\nb l37\nl36:\nload 244\nload 250\n==\nbz l38\nint 0\nstore 245\nb l39\nl38:\nint 1\nstore 245\nl39:\nl37:\nl35:\nload 255\nload 254\nitob\nconcat\nload 253\nconcat\nload 245\nitob\nglobal Round\nitob\nconcat\nload 252\nitob\nconcat\nb loop4\nl33:\n// Handler 19\ndup\nint 19\n==\nbz l40\npop\ntxna ApplicationArgs 1\ndup\nlen\nint 120\n==\nassert\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 40\nbtoi\nstore 254\ndup\nsubstring 40 72\nstore 253\ndup\nsubstring 72 80\nbtoi\nstore 252\ndup\nsubstring 80 88\nbtoi\nstore 251\ndup\nsubstring 88 96\nbtoi\nstore 250\ndup\nsubstring 96 104\nbtoi\nstore 249\ndup\nsubstring 104 112\nbtoi\nstore 248\ndup\nsubstring 112 120\nbtoi\nstore 247\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// compute state in HM_Check 18\nbyte base64(AAAAAAAAABI=)\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nload 252\nitob\nconcat\nload 251\nitob\nconcat\nload 250\nitob\nconcat\nload 249\nitob\nconcat\nload 248\nitob\nconcat\nload 247\nitob\nconcat\nsha256\nload 1\n==\nassert\nglobal Round\nload 247\n>=\nassert\n// \"CheckPay\"\n// \"reach standard library:209:7:dot\"\n// \"[at ./index.rsh:172:41:application call to \\\"closeTo\\\" (defined at: reach standard library:207:8:function exp)]\"\n// Just \"sender correct\"\n// \"reach standard library:209:7:dot\"\n// \"[at ./index.rsh:172:41:application call to \\\"closeTo\\\" (defined at: reach standard library:207:8:function exp)]\"\nload 255\ntxn Sender\n==\nassert\nload 252\ndup\nbz l41\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 2\ndig 1\ngtxns Sender\n==\nassert\nload 255\ndig 1\ngtxns Receiver\n==\nassert\nl41:\npop\nint 0\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 2\ndig 1\ngtxns Sender\n==\nassert\nglobal CreatorAddress\ndig 1\ngtxns CloseRemainderTo\n==\nassert\nl42:\npop\nglobal ZeroAddress\nstore 1\ntxn OnCompletion\nint DeleteApplication\n==\nassert\nb updateState\nl40:\nint 0\nassert\nloop4:\ndup\nsubstring 0 8\nbtoi\nstore 255\ndup\nsubstring 8 16\nbtoi\nstore 254\ndup\nsubstring 16 24\nbtoi\nstore 253\npop\ndup\nsubstring 0 32\nstore 252\ndup\nsubstring 32 40\nbtoi\nstore 251\ndup\nsubstring 40 72\nstore 250\npop\nload 255\nint 1\n==\nbz l43\nload 254\nint 30\n+\nstore 249\n// compute state in HM_Set 6\nbyte base64(AAAAAAAAAAY=)\nload 252\nconcat\nload 251\nitob\nconcat\nload 250\nconcat\nload 253\nitob\nconcat\nload 249\nitob\nconcat\nsha256\nstore 1\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl43:\nload 252\nload 251\nitob\nconcat\nload 250\nconcat\nload 255\nitob\nconcat\nbyte base64()\nloop5:\npop\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 40\nbtoi\nstore 254\ndup\nsubstring 40 72\nstore 253\ndup\nsubstring 72 80\nbtoi\nstore 252\npop\nint 2\nload 254\n*\ndup\nbz l44\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 2\ndig 1\ngtxns Sender\n==\nassert\nload 253\nload 255\nload 252\nint 2\n==\nselect\ndig 1\ngtxns Receiver\n==\nassert\nl44:\npop\nint 0\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 2\ndig 1\ngtxns Sender\n==\nassert\nglobal CreatorAddress\ndig 1\ngtxns CloseRemainderTo\n==\nassert\nl45:\npop\nglobal ZeroAddress\nstore 1\ntxn OnCompletion\nint DeleteApplication\n==\nassert\nupdateState:\nbyte base64()\nload 1\nload 2\nconcat\napp_global_put\ncheckSize:\nload 0\ndup\ndup\nint 1\n+\nglobal GroupSize\n==\nassert\ntxn GroupIndex\n==\nassert\nint 1000\n*\ntxn Fee\n<=\nassert\ndone:\nint 1\nreturn\nalloc:\ntxn OnCompletion\nint NoOp\n==\nassert\nbyte base64()\nint 64\nbzero\napp_global_put\nb checkSize\nctor:\ntxn Sender\nglobal CreatorAddress\n==\nassert\ntxna ApplicationArgs 1\nstore 2\n// compute state in HM_Set 0\nint 8\nbzero\nsha256\nstore 1\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\n`,\n  appClear: `#pragma version 4\nint 0\n`,\n  escrow: `#pragma version 4\nglobal GroupSize\nint 1\n-\ndup\ngtxns TypeEnum\nint appl\n==\nassert\ngtxns ApplicationID\nint {{ApplicationID}}\n==\nassert\ndone:\nint 1\n`,\n  mapDataKeys: 0,\n  mapDataSize: 0,\n  unsupported: [],\n  version: 2,\n  viewKeys: 0,\n  viewSize: 0\n  };\nconst _ETH = {\n  ABI: `[\n  {\n    \"inputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"msg\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReachError\",\n    \"type\": \"error\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [],\n    \"name\": \"e0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"svs\",\n            \"type\": \"bool\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v424\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T2\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T3\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v423\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v424\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v434\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v446\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v469\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v478\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v484\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T15\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v491\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T20\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T21\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e10\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v423\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v424\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v434\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v446\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v469\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v478\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v484\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T15\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T22\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e11\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v423\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v424\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v434\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v446\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v469\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v478\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v491\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v497\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T19\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v500\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T24\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T25\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e12\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v423\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v424\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v434\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v446\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v469\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v478\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v491\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v497\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T19\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T26\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e13\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v423\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v424\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v434\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v446\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v469\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v478\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v491\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v500\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v506\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T23\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v511\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v512\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T28\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T29\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e14\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v423\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v424\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v434\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v446\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v469\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v478\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v491\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v500\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v506\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T23\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T30\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e15\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v423\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v424\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v434\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v446\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v478\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v491\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v500\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v512\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v520\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T27\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v523\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v524\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T32\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T33\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e16\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v423\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v424\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v434\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v446\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v478\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v491\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v500\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v512\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v520\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T27\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T34\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e17\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v423\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v424\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v434\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v446\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v491\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v500\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v512\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v524\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v532\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T31\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v538\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T35\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T36\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e18\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v423\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v424\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v434\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v446\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v491\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v500\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v512\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v524\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v532\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T31\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T37\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e19\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v423\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v424\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v430\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T1\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T7\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e2\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v423\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v424\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v430\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T1\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T7\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e3\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v423\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v424\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v434\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v446\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v456\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T8\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v469\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T12\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e6\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v423\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v424\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v434\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v446\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v456\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T8\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T14\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e7\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v423\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v424\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v434\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v446\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v469\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v475\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T11\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v478\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T16\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T17\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e8\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v423\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v424\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v434\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v446\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v469\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v475\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T11\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T18\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e9\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"svs\",\n            \"type\": \"bool\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v424\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T2\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T3\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m1\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v423\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v424\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v434\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v446\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v469\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v478\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v484\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T15\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v491\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T20\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T21\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m10\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v423\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v424\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v434\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v446\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v469\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v478\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v484\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T15\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T22\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m11\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v423\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v424\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v434\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v446\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v469\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v478\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v491\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v497\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T19\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v500\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T24\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T25\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m12\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v423\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v424\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v434\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v446\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v469\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v478\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v491\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v497\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T19\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T26\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m13\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v423\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v424\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v434\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v446\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v469\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v478\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v491\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v500\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v506\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T23\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v511\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v512\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T28\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T29\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m14\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v423\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v424\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v434\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v446\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v469\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v478\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v491\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v500\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v506\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T23\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T30\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m15\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v423\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v424\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v434\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v446\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v478\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v491\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v500\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v512\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v520\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T27\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v523\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v524\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T32\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T33\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m16\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v423\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v424\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v434\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v446\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v478\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v491\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v500\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v512\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v520\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T27\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T34\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m17\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v423\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v424\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v434\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v446\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v491\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v500\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v512\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v524\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v532\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T31\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v538\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T35\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T36\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m18\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v423\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v424\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v434\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v446\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v491\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v500\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v512\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v524\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v532\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T31\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T37\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m19\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v423\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v424\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v430\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T1\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T7\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m2\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v423\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v424\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v430\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T1\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T7\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m3\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v423\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v424\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v434\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v446\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v456\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T8\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v469\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T12\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m6\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v423\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v424\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v434\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v446\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v456\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T8\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T14\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m7\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v423\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v424\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v434\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v446\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v469\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v475\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T11\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v478\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T16\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T17\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m8\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v423\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v424\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v434\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v446\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v469\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v475\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T11\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T18\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m9\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"receive\"\n  }\n]`,\n  Bytecode: `0x608060408190527f49ff028a829527a47ec6839c7147b484eccf5a2a94853eddac09cef44d9d4e9e90600090a160408051808201825243815242602091820152815160008183018190528184018190528351808303850181526060909201909352805191012090556120c6806100766000396000f3fe6080604052600436106101025760003560e01c8063a6817c4a11610095578063d1fac65b11610064578063d1fac65b146101f4578063dd976a1714610207578063e163d7c41461021a578063e91b1e5e1461022d578063eb041d851461024057600080fd5b8063a6817c4a146101a8578063b32a639f146101bb578063b861cb10146101ce578063cbe8b6a3146101e157600080fd5b80634188e022116100d15780634188e0221461015c5780636cc4a8441461016f5780636dacfd6f1461018257806394e8bd391461019557600080fd5b806309f9cd391461010e5780631d8cae72146101235780631dc091ad146101365780632438df701461014957600080fd5b3661010957005b600080fd5b61012161011c366004611b31565b610253565b005b610121610131366004611b14565b61035b565b610121610144366004611b4e565b610574565b610121610157366004611b60565b610687565b61012161016a366004611abe565b610789565b61012161017d366004611aa2565b610853565b610121610190366004611abe565b610a09565b6101216101a3366004611af7565b610bdc565b6101216101b6366004611b31565b610d88565b6101216101c9366004611ada565b610e43565b6101216101dc366004611aa2565b610efa565b6101216101ef366004611b31565b610fb4565b610121610202366004611b14565b611161565b610121610215366004611ada565b61135a565b610121610228366004611b60565b61154a565b61012161023b366004611b31565b611649565b61012161024e366004611af7565b611704565b60405161028f9061026b906012908490602001611fa4565b6040516020818303038152906040528051906020012060001c6000541460486117b7565b600080556102a661010082013543101560496117b7565b7fcb0cd18f54e48d24312a65e73e86ee2bd093b2bb5d16d254b55d40d128aaf5bd816040516102d59190611ed7565b60405180910390a16102e9341560466117b7565b61030b336102fa6020840184611a65565b6001600160a01b03161460476117b7565b6103186020820182611a65565b6040516001600160a01b039190911690606083013580156108fc02916000818181858888f19350505050158015610353573d6000803e3d6000fd5b506000805533ff5b60405161039790610373906010908490602001611fa4565b6040516020818303038152906040528051906020012060001c60005414603c6117b7565b600080805560408051602081019091529081526103bc6101008301354310603d6117b7565b7f5cacb7816a4293c63b1bb63a96980b5a3bf1ae3a4d787d499122c470b2b2cefd826040516103eb9190611eab565b60405180910390a16103ff341560396117b7565b610421336104106020850185611a65565b6001600160a01b031614603a6117b7565b604080516101208401356020820152610140840135918101919091526104699060600160408051601f198184030181529190528051602090910120608084013514603b6117b7565b610474601e43612043565b8152604080516101208101825260008082526020808301829052928201819052606082018190526080820181905260a0820181905260c0820181905260e08201819052610100820152906104ca90840184611a65565b6001600160a01b03168152602080840135908201526104ef6060840160408501611a65565b6001600160a01b03166040808301919091526060808501359083015260a080850135608084015260c0808601359184019190915260e0808601359184019190915261014085013590830152825161010083015251610554906012908390602001611fb9565b60408051601f198184030181529190528051602090910120600055505050565b6105c660006105866020840184611a87565b6040516020016105a29291909182521515602082015260400190565b6040516020818303038152906040528051906020012060001c6000541460086117b7565b600080805560408051602081018252918252517f120854c39fdbc847613c8c1a66d23aa6d099c4db8f64d852475191e60a6298d990610606908490611f0a565b60405180910390a161061f3460208401351460076117b7565b61062a601e43612043565b81526040805160608082018352600082840190815233835260208681013581850190815286518352855160019281019290925284516001600160a01b0316958201959095529351918401919091525160808301529060a001610554565b6040516106c39061069f906001908490602001611f90565b6040516020818303038152906040528051906020012060001c60005414600a6117b7565b600080556106d860408201354310600b6117b7565b7f1ca594b20641191c893d80895212a20239e99e17b7304a35c096140ec34f22dd816040516107079190611f2b565b60405180910390a16107203460208301351460096117b7565b610728611971565b6107356020830183611a65565b81516001600160a01b039091169052805160208084013591810182905282513360409091015280830180516001905251439101526107739080612043565b602082015160400152610785816117dc565b5050565b6040516107c5906107a1906008908490602001611f52565b6040516020818303038152906040528051906020012060001c60005414601e6117b7565b600080556107db60a0820135431015601f6117b7565b7fe30737f1ebfc963c65c5913e78ab44df878e431e05d360e374cda18b462b262b8160405161080a9190611df7565b60405180910390a161081e3415601c6117b7565b610843336108326060840160408501611a65565b6001600160a01b031614601d6117b7565b6103186060820160408301611a65565b60405161088f9061086b90600690849060200161202f565b6040516020818303038152906040528051906020012060001c6000541460126117b7565b600080805560408051602081019091529081526108b36080830135431060136117b7565b7f16424d059cabc243859f670786693b7e657c3f04cbc39631fa14608999bfaef9826040516108e29190611d98565b60405180910390a16108f6341560106117b7565b610918336109076020850185611a65565b6001600160a01b03161460116117b7565b610923601e43612043565b81526040805160c08101825260008082526020808301829052928201819052606082018190526080820181905260a08201529061096290840184611a65565b6001600160a01b03168152602080840135908201526109876060840160408501611a65565b6001600160a01b03908116604083810191825260608681013581860190815260a08089013560808089019182528951838a01908152865160086020808301919091528b518b1698820198909852968a0151958701959095529551909616948401949094525192820192909252915160c08301525160e082015261010001610554565b604051610a4590610a21906008908490602001611f52565b6040516020818303038152906040528051906020012060001c60005414601a6117b7565b60008080556040805160208101909152908152610a6960a08301354310601b6117b7565b7fa03e2b199cbd4c163bca89aa8e3581bcf82ee511c6ed7b600ee5e8a3e78842b482604051610a989190611ddb565b60405180910390a1610aac341560186117b7565b610ace33610abd6020850185611a65565b6001600160a01b03161460196117b7565b610ad9601e43612043565b81526040805160e08101825260008082526020808301829052928201819052606082018190526080820181905260a0820181905260c082015290610b1f90840184611a65565b6001600160a01b0316815260208084013590820152610b446060840160408501611a65565b6001600160a01b03908116604083810191825260608681013581860190815260808089013581880190815260c0808b013560a0808b019182528b51838c019081528851600a6020808301919091528d518d169a82019a909a52988c0151978901979097529751909816928601929092529151948401949094525192820192909252915160e08301525161010082015261012001610554565b604051610c1890610bf490600c908490602001611f7b565b6040516020818303038152906040528051906020012060001c60005414602a6117b7565b60008080556040805160208101909152908152610c3c60e08301354310602b6117b7565b7f91e00b31ee2f6375f9a7712dda17a3003e4444ed590706f9ce75b98c2fbc7e8982604051610c6b9190611e63565b60405180910390a1610c7f341560286117b7565b610ca433610c936060850160408601611a65565b6001600160a01b03161460296117b7565b610caf601e43612043565b8152604080516101208101825260008082526020808301829052928201819052606082018190526080820181905260a0820181905260c0820181905260e0820181905261010082015290610d0590840184611a65565b6001600160a01b0316815260208084013590820152610d2a6060840160408501611a65565b6001600160a01b0316604080830191909152606080850135908301526080808501359083015260a0808501359083015260c080850135908301526101008085013560e08401528351908301525161055490600e908390602001611fb9565b604051610dc490610da0906010908490602001611fa4565b6040516020818303038152906040528051906020012060001c6000541460406117b7565b60008055610ddb61010082013543101560416117b7565b7fdcc9127a1e0e468858be1baaf7ac6456427de09110d979616adaf4b7578fac6281604051610e0a9190611ed7565b60405180910390a1610e1e3415603e6117b7565b61084333610e326060840160408501611a65565b6001600160a01b031614603f6117b7565b604051610e7f90610e5b90600a908490602001611f66565b6040516020818303038152906040528051906020012060001c6000541460266117b7565b60008055610e9560c082013543101560276117b7565b7fe7cd06eed96e73ebf1eef9fa7a8d285d298aa9f119f81a14f729b421ad209bfa81604051610ec49190611e3b565b60405180910390a1610ed8341560246117b7565b61030b33610ee96020840184611a65565b6001600160a01b03161460256117b7565b604051610f3690610f1290600690849060200161202f565b6040516020818303038152906040528051906020012060001c6000541460166117b7565b60008055610f4c608082013543101560176117b7565b7f5005c4e6004c19e98ada43b5f5d05731c1a82aa5d9215871f88ceb584e0f83e081604051610f7b9190611db4565b60405180910390a1610f8f341560146117b7565b61084333610fa36060840160408501611a65565b6001600160a01b03161460156117b7565b604051610ff090610fcc906012908490602001611fa4565b6040516020818303038152906040528051906020012060001c6000541460446117b7565b600080805560408051808201909152818152602081019190915261101c610100830135431060456117b7565b7ff10cc85109a59db91967f4aa11f738ab67c27f85da1f799a1522ae4611be63f78260405161104b9190611eec565b60405180910390a161105f341560426117b7565b611081336110706020850185611a65565b6001600160a01b03161460436117b7565b60e082013560a0830135141561109a57600181526110e5565b6110ac608083013560c0840135612043565b6020820181905260e083013514156110c757600281526110e5565b602081015160a083013514156110e057600081526110e5565b600181525b6110ed611971565b6110fa6020840184611a65565b81516001600160a01b03909116905280516020808501359101526111246060840160408501611a65565b81516001600160a01b039091166040918201528251602080840180519290925281514391015251606085013591015261115c816117dc565b505050565b60405161119d9061117990600e908490602001611fa4565b6040516020818303038152906040528051906020012060001c6000541460336117b7565b600080805560408051602081019091529081526111c2610100830135431060346117b7565b7ffe2c883248f45579fe462bf3ecd950438902e69351614714f2408cad1ae3bab0826040516111f19190611eab565b60405180910390a1611205341560306117b7565b611227336112166020850185611a65565b6001600160a01b03161460316117b7565b6040805161012084013560208201526101408401359181019190915261126f9060600160408051601f19818403018152919052805160209091012060808401351460326117b7565b61127a601e43612043565b8152604080516101208101825260008082526020808301829052928201819052606082018190526080820181905260a0820181905260c0820181905260e08201819052610100820152906112d090840184611a65565b6001600160a01b03168152602080840135908201526112f56060840160408501611a65565b6001600160a01b03166040808301919091526060808501359083015260a080850135608084015260c0808601359184019190915260e0808601359184019190915261014085013590830152825161010083015251610554906010908390602001611fb9565b6040516113969061137290600a908490602001611f66565b6040516020818303038152906040528051906020012060001c6000541460226117b7565b600080805560408051602081019091529081526113ba60c0830135431060236117b7565b7fb4c471ef97111ce478bb7d28cd3ff17a93e4a969c287e61351792deb8b12d5ae826040516113e99190611e1e565b60405180910390a16113fd341560206117b7565b611422336114116060850160408601611a65565b6001600160a01b03161460216117b7565b61142d601e43612043565b8152604080516101008101825260008082526020808301829052928201819052606082018190526080820181905260a0820181905260c0820181905260e08201529061147b90840184611a65565b6001600160a01b03168152602080840135908201526114a06060840160408501611a65565b6001600160a01b03908116604083810191825260608681013581860190815260808089013581880190815260a0808b0135818a0190815260e0808d013560c0808d019182528d51838e019081528a51600c6020808301919091528f518f169c82019c909c529a8e0151998b01999099529951909a16948801949094529351908601525194840194909452519282019290925291516101008301525161012082015261014001610554565b60405161158690611562906001908490602001611f90565b6040516020818303038152906040528051906020012060001c60005414600e6117b7565b6000805561159c6040820135431015600f6117b7565b7fc3d6ba703f6ce931b1dd0e05e983d8be7c8ccc7f15219d844425151d85623013816040516115cb9190611f2b565b60405180910390a16115df3415600c6117b7565b611601336115f06020840184611a65565b6001600160a01b031614600d6117b7565b61160e6020820182611a65565b6040516001600160a01b039190911690602083013580156108fc02916000818181858888f19350505050158015610353573d6000803e3d6000fd5b6040516116859061166190600e908490602001611fa4565b6040516020818303038152906040528051906020012060001c6000541460376117b7565b6000805561169c61010082013543101560386117b7565b7fff48315370391688acee1930884fa599ea28bb381621ed2995f7026497c8bab2816040516116cb9190611ed7565b60405180910390a16116df341560356117b7565b610843336116f36060840160408501611a65565b6001600160a01b03161460366117b7565b6040516117409061171c90600c908490602001611f7b565b6040516020818303038152906040528051906020012060001c60005414602e6117b7565b6000805561175660e0820135431015602f6117b7565b7f227fbd1aeae57cb534977f6608441d2103b91cb04c437d23fc7e15ea0ef8f151816040516117859190611e81565b60405180910390a16117993415602c6117b7565b61030b336117aa6020840184611a65565b6001600160a01b031614602d5b816107855760405163100960cb60e01b81526004810182905260240160405180910390fd5b604080516020810190915260008152602082015151600114156118ab57601e82602001516020015161180e9190612043565b81526040805160a0808201835260008083526020808401828152848601838152606080870185815260808089019687528b51516001600160a01b039081168a528c5187015186528c518b0151811685528c8701518b015183528b5188528a51600697810197909752895181169a87019a909a529351918501919091529051909616908201529351918401919091525160c08301529060e001610554565b6040805160c0810182526000818301818152606083018281526080840183815260a085018481528386526020808701959095528851516001600160a01b03908116909452885185015190925287519095015190911690935284015151918290529061115c90829060021461192457805160400151611928565b8051515b6001600160a01b03166108fc8260000151602001516002611949919061205b565b6040518115909202916000818181858888f19350505050158015610353573d6000803e3d6000fd5b6040805160a081018252600091810182815260608201839052608082019290925290819081526020016119be60405180606001604052806000815260200160008152602001600081525090565b905290565b80356001600160a01b03811681146119da57600080fd5b919050565b803580151581146119da57600080fd5b600060c08284031215611a0157600080fd5b50919050565b600060e08284031215611a0157600080fd5b60006101008284031215611a0157600080fd5b60006101208284031215611a0157600080fd5b60006101608284031215611a0157600080fd5b60006101408284031215611a0157600080fd5b600060208284031215611a7757600080fd5b611a80826119c3565b9392505050565b600060208284031215611a9957600080fd5b611a80826119df565b600060c08284031215611ab457600080fd5b611a8083836119ef565b600060e08284031215611ad057600080fd5b611a808383611a07565b60006101008284031215611aed57600080fd5b611a808383611a19565b60006101208284031215611b0a57600080fd5b611a808383611a2c565b60006101608284031215611b2757600080fd5b611a808383611a3f565b60006101408284031215611b4457600080fd5b611a808383611a52565b600060408284031215611a0157600080fd5b600060808284031215611a0157600080fd5b6001600160a01b0380611b84836119c3565b1683526020820135602084015280611b9e604084016119c3565b16604084015250606081013560608301526080810135608083015260a081013560a08301525050565b6001600160a01b0380611bd9836119c3565b1683526020820135602084015280611bf3604084016119c3565b16604084015250606081013560608301526080810135608083015260a081013560a083015260c081013560c08301525050565b6001600160a01b0380611c38836119c3565b1683526020820135602084015280611c52604084016119c3565b16604084015250606081013560608301526080810135608083015260a081013560a083015260c081013560c083015260e081013560e08301525050565b6001600160a01b03611ca0826119c3565b16825260208181013590830152604090810135910152565b6001600160a01b0380611cca836119c3565b1683526020820135602084015280611ce4604084016119c3565b16604084015250606081013560608301526080810135608083015260a081013560a083015260c081013560c083015260e081013560e08301526101008082013581840152505050565b611d378282611cb8565b610120611d458183016119df565b151581840152505050565b6001600160a01b0380611d62836119c3565b1683526020820135602084015280611d7c604084016119c3565b1660408401525060608181013590830152608090810135910152565b60c08101611da68284611d50565b60a092830135919092015290565b60c08101611dc28284611d50565b611dce60a084016119df565b151560a083015292915050565b60e08101611de98284611b72565b60c092830135919092015290565b60e08101611e058284611b72565b611e1160c084016119df565b151560c083015292915050565b6101008101611e2d8284611bc7565b60e092830135919092015290565b6101008101611e4a8284611bc7565b611e5660e084016119df565b151560e083015292915050565b6101208101611e728284611c26565b61010092830135919092015290565b6101208101611e908284611c26565b610100611e9e8185016119df565b1515818401525092915050565b6101608101611eba8284611cb8565b610120838101358382015261014080850135908401525092915050565b6101408101611ee68284611d2d565b92915050565b6101408101611efb8284611cb8565b61012092830135919092015290565b60408101611f17836119df565b151582526020830135602083015292915050565b60808101611f398284611c8f565b611f45606084016119df565b1515606083015292915050565b82815260e08101611a806020830184611b72565b8281526101008101611a806020830184611bc7565b8281526101208101611a806020830184611c26565b82815260808101611a806020830184611c8f565b8281526101408101611a806020830184611cb8565b8281526101408101611a80602083018460018060a01b038082511683526020820151602084015280604083015116604084015250606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152505050565b82815260c08101611a806020830184611d50565b600082198211156120565761205661207a565b500190565b60008160001904831182151516156120755761207561207a565b500290565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220677179fb80b349d392451729231ccfdf97048975caff83ede4e35e82e28037fa64736f6c63430008070033`,\n  BytecodeLen: 8508,\n  Which: `oD`,\n  deployMode: `DM_constructor`,\n  version: 1,\n  views: {\n    }\n  };\n\nexport const _Connectors = {\n  ALGO: _ALGO,\n  ETH: _ETH\n  };\n\n","import logo from './logo.svg';\nimport React, { Component } from 'react';\nimport './App.css';\nimport { loadStdlib } from '@reach-sh/stdlib'\nimport * as backend from './build/index.main.mjs';\nimport { Button, Heading, PipelineShell, Loader, Text, Flex } from 'pipeline-ui';\n\nvar myLog = [];\nvar myLoading = false;\n\nconst reach = loadStdlib('ALGO-devnet')\n\n//change Algo server IP to match your local reach devnet IP, or leave with \"http://localhost\" to test on local machine only.\n\nconst myEnv = reach.providerEnvByName('LocalHost');\nconsole.log(myEnv)\nObject.assign(myEnv, {\n  ALGO_SERVER:\"https://4180-jade-cow-0md3r5d5.ws-us17.gitpod.io/\",\n  ALGO_PORT: \"\",\n  ALGO_INDEXER_SERVER: \"https://8980-jade-cow-0md3r5d5.ws-us17.gitpod.io/\",\n  ALGO_INDEXER_PORT: \"\",\n  REACH_ISOLATED_NETWORK: \"yes\",\n  REACH_DEBUG: \"false\",\n})\nreach.setProviderByEnv(myEnv);\n\nasync function test() {\n  const startingBalance = reach.parseCurrency(1000);\n\n  const accAlice = await reach.newTestAccount(startingBalance);\n  const accBob = await reach.newTestAccount(startingBalance);\n\n  const fmt = (x) => reach.formatCurrency(x, 4);\n  const getBalance = async (who) => fmt(await reach.balanceOf(who));\n  const beforeAlice = await getBalance(accAlice);\n  const beforeBob = await getBalance(accBob);\n\n  const ctcAlice = accAlice.deploy(backend);\n  const ctcBob = accBob.attach(backend, ctcAlice.getInfo());\n\n  const FINGERS = [0, 1, 2, 3, 4, 5];\n  const GUESS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n  const OUTCOME = ['Bob wins', 'Draw', 'Alice wins'];\n\n  const Player = (Who) => ({\n    ...reach.hasRandom,\n    getFingers: async () => {\n      // const fingers = Math.floor(Math.random() * 3);\n      const fingers = Math.floor(Math.random() * 6);\n      myLog.push(`${Who} shoots ${FINGERS[fingers]} fingers`);\n      // build in occasional timeout\n      if (Math.random() <= 0.01) {\n        for (let i = 0; i < 10; i++) {\n          myLog.push(`${Who} takes their sweet time sending it back...`);\n          await reach.wait(1);\n        }\n      }\n      return fingers;\n    },\n    getGuess: async (fingers) => {\n      // guess should be greater than or equal to number of fingers thrown\n      // const guess= Math.floor(Math.random() * 3);\n      const guess = Math.floor(Math.random() * 6) + FINGERS[fingers];\n      // occassional timeout\n      if (Math.random() <= 0.01) {\n        for (let i = 0; i < 10; i++) {\n          myLog.push(`${Who} takes their sweet time sending it back...`);\n          await reach.wait(1);\n        }\n      }\n      myLog.push(`${Who} guessed total of ${guess}`);\n      return guess;\n    },\n    seeWinning: (winningNumber) => {\n      myLog.push(`Actual total fingers thrown: ${winningNumber}`);\n      myLog.push(`----------------------------`);\n    },\n\n    seeOutcome: (outcome) => {\n      myLog.push(`${Who} saw outcome ${OUTCOME[outcome]}`);\n    },\n    informTimeout: () => {\n      myLog.push(`${Who} observed a timeout`);\n    },\n  });\n\n  await Promise.all([\n    backend.Alice(ctcAlice, {\n      ...Player('Alice'),\n      wager: reach.parseCurrency(5),\n      ...reach.hasConsoleLogger,\n    }),\n    backend.Bob(ctcBob, {\n      ...Player('Bob'),\n      acceptWager: (amt) => {\n        myLoading = false;\n        myLog.push(`Bob accepts the wager of ${fmt(amt)}.`);\n      },\n      ...reach.hasConsoleLogger,\n    }),\n  ]);\n  const afterAlice = await getBalance(accAlice);\n  const afterBob = await getBalance(accBob);\n\n  myLog.push(`Alice went from ${beforeAlice} to ${afterAlice}.`);\n  myLog.push(`Bob went from ${beforeBob} to ${afterBob}.`);\n\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cLog: [],\n      loading: false\n    }\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.setState({ cLog: myLog, loading: myLoading }), 100);\n  }\n\n  render() {\n    return (<div align=\"center\">\n      <PipelineShell width=\"400px\">\n        <Heading>Reach Morra via Algorand</Heading>\n        <Button onClick={() => { myLoading = true; test() }}>Deploy Morra!</Button><br></br>\n        <div align=\"center\">{this.state.loading ? <Loader bg=\"unset\" color=\"blue\" size=\"40px\" /> : null}</div>\n        {this.state.cLog.map(row => { return (<Text>{row}</Text>) })}\n      </PipelineShell>\n    </div>)\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}